// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: gw.proto

package gwpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EReqType int32

const (
	EReqType_e_req_purge_fd       EReqType = 1 //清理某一个fd，断开连接
	EReqType_e_req_conn_cnt       EReqType = 2 //获取网关当前连接总数
	EReqType_e_req_add_imei       EReqType = 3 //添加imei白名单
	EReqType_e_req_add_errimei    EReqType = 4 //添加imei黑名单
	EReqType_e_req_get_topimei    EReqType = 5 //获取前200个已连接imeis
	EReqType_e_req_rmv_errimei    EReqType = 6 //清除黑名单
	EReqType_e_req_check_gpsqueue EReqType = 7 //检查轨迹发送队列情况
)

// Enum value maps for EReqType.
var (
	EReqType_name = map[int32]string{
		1: "e_req_purge_fd",
		2: "e_req_conn_cnt",
		3: "e_req_add_imei",
		4: "e_req_add_errimei",
		5: "e_req_get_topimei",
		6: "e_req_rmv_errimei",
		7: "e_req_check_gpsqueue",
	}
	EReqType_value = map[string]int32{
		"e_req_purge_fd":       1,
		"e_req_conn_cnt":       2,
		"e_req_add_imei":       3,
		"e_req_add_errimei":    4,
		"e_req_get_topimei":    5,
		"e_req_rmv_errimei":    6,
		"e_req_check_gpsqueue": 7,
	}
)

func (x EReqType) Enum() *EReqType {
	p := new(EReqType)
	*p = x
	return p
}

func (x EReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[0].Descriptor()
}

func (EReqType) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[0]
}

func (x EReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EReqType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EReqType(num)
	return nil
}

// Deprecated: Use EReqType.Descriptor instead.
func (EReqType) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{0}
}

type EErrCode int32

const (
	EErrCode_e_err_ok           EErrCode = 1
	EErrCode_e_err_fd_not_used  EErrCode = 2
	EErrCode_e_err_fd_not_found EErrCode = 3
	EErrCode_e_err_sys          EErrCode = 100
)

// Enum value maps for EErrCode.
var (
	EErrCode_name = map[int32]string{
		1:   "e_err_ok",
		2:   "e_err_fd_not_used",
		3:   "e_err_fd_not_found",
		100: "e_err_sys",
	}
	EErrCode_value = map[string]int32{
		"e_err_ok":           1,
		"e_err_fd_not_used":  2,
		"e_err_fd_not_found": 3,
		"e_err_sys":          100,
	}
)

func (x EErrCode) Enum() *EErrCode {
	p := new(EErrCode)
	*p = x
	return p
}

func (x EErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[1].Descriptor()
}

func (EErrCode) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[1]
}

func (x EErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EErrCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EErrCode(num)
	return nil
}

// Deprecated: Use EErrCode.Descriptor instead.
func (EErrCode) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{1}
}

type ELocType int32

const (
	ELocType_e_lbs         ELocType = 0
	ELocType_e_gps         ELocType = 1
	ELocType_e_wifi        ELocType = 2
	ELocType_e_static_lbs  ELocType = 3
	ELocType_e_static_gps  ELocType = 4
	ELocType_e_static_wifi ELocType = 5
)

// Enum value maps for ELocType.
var (
	ELocType_name = map[int32]string{
		0: "e_lbs",
		1: "e_gps",
		2: "e_wifi",
		3: "e_static_lbs",
		4: "e_static_gps",
		5: "e_static_wifi",
	}
	ELocType_value = map[string]int32{
		"e_lbs":         0,
		"e_gps":         1,
		"e_wifi":        2,
		"e_static_lbs":  3,
		"e_static_gps":  4,
		"e_static_wifi": 5,
	}
)

func (x ELocType) Enum() *ELocType {
	p := new(ELocType)
	*p = x
	return p
}

func (x ELocType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ELocType) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[2].Descriptor()
}

func (ELocType) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[2]
}

func (x ELocType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ELocType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ELocType(num)
	return nil
}

// Deprecated: Use ELocType.Descriptor instead.
func (ELocType) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{2}
}

//通用消息类型
type ECommonMsgType int32

const (
	ECommonMsgType_e_modesync           ECommonMsgType = 1  //短信设置的模式同步到服务器
	ECommonMsgType_e_fence              ECommonMsgType = 2  //围栏位置信息判断
	ECommonMsgType_e_modeconfirm        ECommonMsgType = 3  //设备执行成功的模式设置到服务器
	ECommonMsgType_e_opendev            ECommonMsgType = 4  //设备开通
	ECommonMsgType_e_DataAnalysis       ECommonMsgType = 5  //位置数据解析
	ECommonMsgType_e_kksdevalarm        ECommonMsgType = 6  //康凯斯设备告警
	ECommonMsgType_e_kksgpsaddrreq      ECommonMsgType = 7  //康凯斯设备gps地址请求
	ECommonMsgType_e_kkslbsaddrreq      ECommonMsgType = 8  //康凯斯设备lbs地址请求
	ECommonMsgType_e_cmd_response       ECommonMsgType = 9  //回写指令执行结果
	ECommonMsgType_e_close_vor          ECommonMsgType = 10 //设备关闭声控
	ECommonMsgType_e_tqgpsaddrreq       ECommonMsgType = 11 //康凯斯设备gps地址请求
	ECommonMsgType_e_lbsinfo_collect    ECommonMsgType = 12 //基站信息收集
	ECommonMsgType_e_kksgt06edevalarm   ECommonMsgType = 13 //康凯斯设备告警
	ECommonMsgType_e_kksgt06egpsaddrreq ECommonMsgType = 14 //康凯斯设备gps地址请求
	ECommonMsgType_e_kksgt06elbsaddrreq ECommonMsgType = 15 //康凯斯设备lbs地址请求
)

// Enum value maps for ECommonMsgType.
var (
	ECommonMsgType_name = map[int32]string{
		1:  "e_modesync",
		2:  "e_fence",
		3:  "e_modeconfirm",
		4:  "e_opendev",
		5:  "e_DataAnalysis",
		6:  "e_kksdevalarm",
		7:  "e_kksgpsaddrreq",
		8:  "e_kkslbsaddrreq",
		9:  "e_cmd_response",
		10: "e_close_vor",
		11: "e_tqgpsaddrreq",
		12: "e_lbsinfo_collect",
		13: "e_kksgt06edevalarm",
		14: "e_kksgt06egpsaddrreq",
		15: "e_kksgt06elbsaddrreq",
	}
	ECommonMsgType_value = map[string]int32{
		"e_modesync":           1,
		"e_fence":              2,
		"e_modeconfirm":        3,
		"e_opendev":            4,
		"e_DataAnalysis":       5,
		"e_kksdevalarm":        6,
		"e_kksgpsaddrreq":      7,
		"e_kkslbsaddrreq":      8,
		"e_cmd_response":       9,
		"e_close_vor":          10,
		"e_tqgpsaddrreq":       11,
		"e_lbsinfo_collect":    12,
		"e_kksgt06edevalarm":   13,
		"e_kksgt06egpsaddrreq": 14,
		"e_kksgt06elbsaddrreq": 15,
	}
)

func (x ECommonMsgType) Enum() *ECommonMsgType {
	p := new(ECommonMsgType)
	*p = x
	return p
}

func (x ECommonMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECommonMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[3].Descriptor()
}

func (ECommonMsgType) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[3]
}

func (x ECommonMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECommonMsgType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECommonMsgType(num)
	return nil
}

// Deprecated: Use ECommonMsgType.Descriptor instead.
func (ECommonMsgType) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{3}
}

type EProtocol int32

const (
	EProtocol_e_protocol_gt808_2011 EProtocol = 1
	EProtocol_e_protocol_gt808_2013 EProtocol = 2
	EProtocol_e_protocol_gt808_2019 EProtocol = 3
	EProtocol_e_protocol_kks        EProtocol = 100
	EProtocol_e_protocol_kks_gt06e  EProtocol = 101
	EProtocol_e_protocol_tq         EProtocol = 110
)

// Enum value maps for EProtocol.
var (
	EProtocol_name = map[int32]string{
		1:   "e_protocol_gt808_2011",
		2:   "e_protocol_gt808_2013",
		3:   "e_protocol_gt808_2019",
		100: "e_protocol_kks",
		101: "e_protocol_kks_gt06e",
		110: "e_protocol_tq",
	}
	EProtocol_value = map[string]int32{
		"e_protocol_gt808_2011": 1,
		"e_protocol_gt808_2013": 2,
		"e_protocol_gt808_2019": 3,
		"e_protocol_kks":        100,
		"e_protocol_kks_gt06e":  101,
		"e_protocol_tq":         110,
	}
)

func (x EProtocol) Enum() *EProtocol {
	p := new(EProtocol)
	*p = x
	return p
}

func (x EProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[4].Descriptor()
}

func (EProtocol) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[4]
}

func (x EProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EProtocol) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EProtocol(num)
	return nil
}

// Deprecated: Use EProtocol.Descriptor instead.
func (EProtocol) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{4}
}

type SwicthState int32

const (
	SwicthState_E_STATE_CLOSE SwicthState = 0
	SwicthState_E_STATE_OPEN  SwicthState = 1
)

// Enum value maps for SwicthState.
var (
	SwicthState_name = map[int32]string{
		0: "E_STATE_CLOSE",
		1: "E_STATE_OPEN",
	}
	SwicthState_value = map[string]int32{
		"E_STATE_CLOSE": 0,
		"E_STATE_OPEN":  1,
	}
)

func (x SwicthState) Enum() *SwicthState {
	p := new(SwicthState)
	*p = x
	return p
}

func (x SwicthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwicthState) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[5].Descriptor()
}

func (SwicthState) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[5]
}

func (x SwicthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SwicthState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SwicthState(num)
	return nil
}

// Deprecated: Use SwicthState.Descriptor instead.
func (SwicthState) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{5}
}

//设置电话本
//0：删除终端上所有存储的联系人；
//1：表示更新电话本(删除终端中已有全部联系人并追加消息，户的联系人)；
//2：表示追加电话本；
//3：表示修改电话本(以联系人为索引)
type SETPHONEBOOKSTATE int32

const (
	SETPHONEBOOKSTATE_PHONE_BOOK_DEL    SETPHONEBOOKSTATE = 0
	SETPHONEBOOKSTATE_PHONE_BOOK_UPDATE SETPHONEBOOKSTATE = 1
	SETPHONEBOOKSTATE_PHONE_BOOK_ADD    SETPHONEBOOKSTATE = 2
	SETPHONEBOOKSTATE_PHONE_BOOK_MODIFY SETPHONEBOOKSTATE = 3
)

// Enum value maps for SETPHONEBOOKSTATE.
var (
	SETPHONEBOOKSTATE_name = map[int32]string{
		0: "PHONE_BOOK_DEL",
		1: "PHONE_BOOK_UPDATE",
		2: "PHONE_BOOK_ADD",
		3: "PHONE_BOOK_MODIFY",
	}
	SETPHONEBOOKSTATE_value = map[string]int32{
		"PHONE_BOOK_DEL":    0,
		"PHONE_BOOK_UPDATE": 1,
		"PHONE_BOOK_ADD":    2,
		"PHONE_BOOK_MODIFY": 3,
	}
)

func (x SETPHONEBOOKSTATE) Enum() *SETPHONEBOOKSTATE {
	p := new(SETPHONEBOOKSTATE)
	*p = x
	return p
}

func (x SETPHONEBOOKSTATE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SETPHONEBOOKSTATE) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[6].Descriptor()
}

func (SETPHONEBOOKSTATE) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[6]
}

func (x SETPHONEBOOKSTATE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SETPHONEBOOKSTATE) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SETPHONEBOOKSTATE(num)
	return nil
}

// Deprecated: Use SETPHONEBOOKSTATE.Descriptor instead.
func (SETPHONEBOOKSTATE) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{6}
}

//1：呼入；2：呼出；3：呼入/呼出
type PHONESTATE int32

const (
	PHONESTATE_PHONE_INCOMING PHONESTATE = 1
	PHONESTATE_PHONE_OUT      PHONESTATE = 2
	PHONESTATE_PHONE_ALL      PHONESTATE = 3
)

// Enum value maps for PHONESTATE.
var (
	PHONESTATE_name = map[int32]string{
		1: "PHONE_INCOMING",
		2: "PHONE_OUT",
		3: "PHONE_ALL",
	}
	PHONESTATE_value = map[string]int32{
		"PHONE_INCOMING": 1,
		"PHONE_OUT":      2,
		"PHONE_ALL":      3,
	}
)

func (x PHONESTATE) Enum() *PHONESTATE {
	p := new(PHONESTATE)
	*p = x
	return p
}

func (x PHONESTATE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PHONESTATE) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[7].Descriptor()
}

func (PHONESTATE) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[7]
}

func (x PHONESTATE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PHONESTATE) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PHONESTATE(num)
	return nil
}

// Deprecated: Use PHONESTATE.Descriptor instead.
func (PHONESTATE) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{7}
}

//周期定位类型
type LoopType int32

const (
	LoopType_E_LOOP_LOCATION_CANCEL LoopType = 0
	LoopType_E_LOOP_LOCATION_MONTH  LoopType = 1
	LoopType_E_LOOP_LOCATION_WEEK   LoopType = 2
	LoopType_E_LOOP_LOCATION_DAY    LoopType = 3
)

// Enum value maps for LoopType.
var (
	LoopType_name = map[int32]string{
		0: "E_LOOP_LOCATION_CANCEL",
		1: "E_LOOP_LOCATION_MONTH",
		2: "E_LOOP_LOCATION_WEEK",
		3: "E_LOOP_LOCATION_DAY",
	}
	LoopType_value = map[string]int32{
		"E_LOOP_LOCATION_CANCEL": 0,
		"E_LOOP_LOCATION_MONTH":  1,
		"E_LOOP_LOCATION_WEEK":   2,
		"E_LOOP_LOCATION_DAY":    3,
	}
)

func (x LoopType) Enum() *LoopType {
	p := new(LoopType)
	*p = x
	return p
}

func (x LoopType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoopType) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[8].Descriptor()
}

func (LoopType) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[8]
}

func (x LoopType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LoopType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LoopType(num)
	return nil
}

// Deprecated: Use LoopType.Descriptor instead.
func (LoopType) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{8}
}

//新周期定位下发
type LocType int32

const (
	LocType_E_LOOP_LOC     LocType = 0
	LocType_E_REALTIME_LOC LocType = 1
)

// Enum value maps for LocType.
var (
	LocType_name = map[int32]string{
		0: "E_LOOP_LOC",
		1: "E_REALTIME_LOC",
	}
	LocType_value = map[string]int32{
		"E_LOOP_LOC":     0,
		"E_REALTIME_LOC": 1,
	}
)

func (x LocType) Enum() *LocType {
	p := new(LocType)
	*p = x
	return p
}

func (x LocType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LocType) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[9].Descriptor()
}

func (LocType) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[9]
}

func (x LocType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LocType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LocType(num)
	return nil
}

// Deprecated: Use LocType.Descriptor instead.
func (LocType) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{9}
}

type EAudioType int32

const (
	EAudioType_e_short_audio EAudioType = 1 //短录音
	EAudioType_e_cont_audio  EAudioType = 2 //声控录音
)

// Enum value maps for EAudioType.
var (
	EAudioType_name = map[int32]string{
		1: "e_short_audio",
		2: "e_cont_audio",
	}
	EAudioType_value = map[string]int32{
		"e_short_audio": 1,
		"e_cont_audio":  2,
	}
)

func (x EAudioType) Enum() *EAudioType {
	p := new(EAudioType)
	*p = x
	return p
}

func (x EAudioType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EAudioType) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[10].Descriptor()
}

func (EAudioType) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[10]
}

func (x EAudioType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EAudioType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EAudioType(num)
	return nil
}

// Deprecated: Use EAudioType.Descriptor instead.
func (EAudioType) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{10}
}

//终端设置参数
type ECmdType int32

const (
	ECmdType_e_cmd_dev_heart                  ECmdType = 1  //心跳
	ECmdType_e_cmd_dev_phone_report           ECmdType = 2  //号码上报
	ECmdType_e_cmd_dev_gps_report             ECmdType = 3  //GPS数据上报
	ECmdType_e_cmd_dev_lbs_report             ECmdType = 4  //基站数据上报
	ECmdType_e_cmd_dev_wifi_report            ECmdType = 5  //WIFI数据上报
	ECmdType_e_cmd_dev_alarm_report           ECmdType = 6  //报警上报
	ECmdType_e_cmd_dev_sync_data              ECmdType = 7  //数据同步
	ECmdType_e_cmd_dev_location_manual        ECmdType = 8  //手动定位
	ECmdType_e_cmd_dev_set_time               ECmdType = 9  //设置设备时间
	ECmdType_e_cmd_dev_set_loop               ECmdType = 10 //周期定位
	ECmdType_e_cmd_dev_location_internal      ECmdType = 11 //定位间隔
	ECmdType_e_cmd_dev_fence_alarm            ECmdType = 12 //围栏报警
	ECmdType_e_cmd_dev_reset                  ECmdType = 13 //恢复出厂
	ECmdType_e_cmd_dev_dormancy               ECmdType = 14 //设备休眠
	ECmdType_e_cmd_dev_sleep_intval           ECmdType = 15 //设备休眠时间设置
	ECmdType_e_cmd_dev_loc_pre                ECmdType = 16 //设备优先定位类型
	ECmdType_e_cmd_dev_charge_state           ECmdType = 17 //设备充电状态上报
	ECmdType_e_cmd_dev_phone_book             ECmdType = 18 //设备电话本
	ECmdType_e_cmd_dev_listen                 ECmdType = 19 //监听
	ECmdType_e_cmd_dev_report_location_intval ECmdType = 20 //设备上报定位间隔
	ECmdType_e_cmd_dev_domain_set             ECmdType = 21 //更改设备连接地址
	ECmdType_e_cmd_dev_set_alarm_state        ECmdType = 22 //报警开关设置
	ECmdType_e_cmd_replay_switch              ECmdType = 23 //继电器开关
	ECmdType_e_cmd_report_acc_state           ECmdType = 24 //ACC状态上报
	ECmdType_e_cmd_sensity                    ECmdType = 25 //灵敏度设置
	ECmdType_e_cmd_gps_state                  ECmdType = 26 //GPS休眠
	ECmdType_e_cmd_fly_mode                   ECmdType = 27 //休眠进入飞行模式
	ECmdType_e_cmd_dev_stop_gps               ECmdType = 28 //静止GPS数据
	ECmdType_e_cmd_dev_stop_lbs               ECmdType = 29 //静止LBS数据
	ECmdType_e_cmd_dev_stop_wifi              ECmdType = 30 //静止WIFI数据
	ECmdType_e_cmd_dev_gsensor_interval       ECmdType = 31 //设备G-Sensor检测间隔 设备休眠唤醒时间
	ECmdType_e_cmd_dev_gpsadd_lbs_model       ECmdType = 32 //GPS混合模式 0:无, 1:LBS, 2:WIFI, 3:WIFI+LBS
	ECmdType_e_cmd_gps_add_lbs_report         ECmdType = 33 //GPS LBS混合数据
	ECmdType_e_cmd_stop_gps_add_lbs           ECmdType = 34 //静止GPS LBS混合数据
	ECmdType_e_cmd_shake_value                ECmdType = 35 //震动报警数值设置0-关闭
	ECmdType_e_cmd_gps_speed_limit            ECmdType = 36 //超速限制设置
	ECmdType_e_cmd_speed_run_value            ECmdType = 37 //运动状态速度值设置 超过该速度判断设备为运动
	ECmdType_e_cmd_inflection                 ECmdType = 38 //拐点补偿
	ECmdType_e_cmd_dev_sound_switch           ECmdType = 39 //设备声音提示开关
	//40--59 内部使用,如有使用请参考上下文
	ECmdType_e_cmd_onekey_state              ECmdType = 40 //一键请求设备, 0:睡眠，1:唤醒, 2:重启
	ECmdType_e_cmd_dev_domain_set_t          ECmdType = 50 //设置从IP
	ECmdType_e_cmd_vor_off                   ECmdType = 59 //声控开关关闭
	ECmdType_e_cmd_audio_notify              ECmdType = 60 //通知设备语音数据上传D60#1 D60#0
	ECmdType_e_cmd_audio_report              ECmdType = 61
	ECmdType_e_cmd_audio_mem_not_enough      ECmdType = 62  //实时定位上传模式 fuyong 枚举名有误导性
	ECmdType_e_cmd_set_dev_language          ECmdType = 63  //设置设备语音
	ECmdType_e_cmd_set_timer_switch          ECmdType = 65  //设置定时开关机
	ECmdType_e_cmd_set_loc_mode              ECmdType = 66  //设置定位模式
	ECmdType_e_cmd_find_dev                  ECmdType = 67  //查找设备
	ECmdType_e_cmd_get_ext_power_t           ECmdType = 68  //查询外电电流 电压
	ECmdType_e_cmd_led_swtich                ECmdType = 77  //LED灯控制
	ECmdType_e_cmd_pullout_alarm             ECmdType = 78  //防拆报警开关
	ECmdType_e_cmd_set_centerphone           ECmdType = 79  //设置中心号码
	ECmdType_e_cmd_set_looptime              ECmdType = 80  //设置设备下次连接服务器时间(周期定位)
	ECmdType_e_cmd_dev_set_log_sign          ECmdType = 81  //终端上传指令开关
	ECmdType_e_cmd_dev_set_low_voltage       ECmdType = 82  //低电报警开关
	ECmdType_e_cmd_dev_set_light_drop        ECmdType = 83  //光感脱落，光感恢复，
	ECmdType_e_cmd_dev_set_close_alarm       ECmdType = 84  //关闭报警开关
	ECmdType_e_cmd_dev_set_dev_mode          ECmdType = 85  //下发设置终端定位模式
	ECmdType_e_cmd_dev_set_remote_upgrade    ECmdType = 86  //下发设置终端远程升级功能
	ECmdType_e_cmd_dev_set_tracke            ECmdType = 87  //休眠的离线的追踪指令  放在redis里面
	ECmdType_e_cmd_dev_text                  ECmdType = 88  //文本下发
	ECmdType_e_cmd_set_dev_type              ECmdType = 89  //设置设备型号
	ECmdType_e_cmd_set_dev_disconn           ECmdType = 90  //设置休眠是否断网 GPRS
	ECmdType_e_cmd_dev_sleep_location_intval ECmdType = 91  //设置休眠定位上报间隔
	ECmdType_e_cmd_start_record              ECmdType = 92  //开启录音
	ECmdType_e_cmd_stop_record               ECmdType = 93  //停止录音
	ECmdType_e_cmd_query_location            ECmdType = 94  //点名模式下查询位置信息
	ECmdType_e_cmd_send_message              ECmdType = 95  //设备发送短信
	ECmdType_e_cmd_af_sleep_action           ECmdType = 96  //设置设备休眠后的动作,0-发送心跳数据，1-发送定位数据，2-断网, 默认为0
	ECmdType_e_cmd_repgps_when_still         ECmdType = 97  //设置设备在唤醒状态下静止时是否上报定位数据，0：不上报，1：上报。默认0
	ECmdType_e_cmd_if_carry_lbswifi          ECmdType = 98  //设置设备上报的定位数据中，在定到位的状态下，是否带上基站及wifi等附带信息，0：不带，1：带上，默认为0
	ECmdType_e_cmd_set_protocol              ECmdType = 99  //设置当前协议：0：JT808/2011版本；1: JT808/2013版本；2: JT808/2019版本;3:康凯斯协议。默认为1
	ECmdType_e_cmd_set_acc_alarm             ECmdType = 100 //ACC上电报警开关，0:关闭，1:开启，默认为0（此开关不依赖于设防状态）
	ECmdType_e_cmd_set_log_level             ECmdType = 101 //设置LOG上报等级，0:关闭log上报;1:INFO;2:WARNING;3:ERROR;4:FATAL, 默认为1
	ECmdType_e_cmd_sms_pass                  ECmdType = 102 //短信透传，服务器通过设备发送短信到指定的手机号
	ECmdType_e_cmd_dyd_gracefully            ECmdType = 103 //断油电，结合速度传感器状态
	ECmdType_e_cmd_recover_dyd               ECmdType = 104 //恢复油电
	ECmdType_e_cmd_dyd_forcely               ECmdType = 105 //强制断油电
	ECmdType_e_cmd_set_phone_alarm           ECmdType = 106 //设置各种报警触发时电话报警次数（客户定制）
	ECmdType_e_cmd_set_alarm_notify          ECmdType = 107 //设置不同报警类型触发时的报警通知方式（客户定制）BYTE:报警类型，1-震动报警 2-断电报警 3-ACC接通报警（非法启动）BYTE:报警通知方式，0-不通知，1-短信通知，2-电话通知，3-短信加电话通知，默认为0
	ECmdType_e_cmd_set_shake_alarm           ECmdType = 108 //设防及震动报警参数设置：震动报警开关（BYTE）; 0-关闭，1-打开，默认为0;此项为0时，后面参数不生效自动设防延时时间（BYTE,单位：分钟）; 范围：1-60; 默认5分钟震动检测时间（WORD,单位：秒）范围：10-300; 默认10秒自动设防震动报警延时（WORD,单位：秒）范围：10-300; 默认60秒震动报警间隔（WORD,单位：分钟）范围：1-3000; 默认5分钟
	ECmdType_e_cmd_set_fence_mode            ECmdType = 109 //设防模式设置，0-自动设防，1-手动设防，默认为0，设置为1时，设防立即生效（不能同时存在，选择其中一项，另一项就关闭）
	ECmdType_e_cmd_piece_through             ECmdType = 110
	//kks begin
	ECmdType_e_cmd_alarm_response    ECmdType = 201 //康凯斯报警回复
	ECmdType_e_cmd_gps_addr_response ECmdType = 202 //康凯斯设备gps地址请求回复
	ECmdType_e_cmd_lbs_addr_response ECmdType = 203 //康凯斯设备lbs地址请求回复
	ECmdType_e_cmd_kks_sms_content   ECmdType = 210 //康凯斯短信指令
	//tq_begin
	ECmdType_e_cmd_tq_gps_addr_response ECmdType = 301 //天琴设备gps地址请求回复
	ECmdType_e_cmd_tq_sms_content       ECmdType = 302 //天琴短信指令
	ECmdType_e_cmd_admin_check          ECmdType = 1088
	ECmdType_e_cmd_sim_msg              ECmdType = 1089  //先占用，并没有实际发送指令，发送了sim卡的指令
	ECmdType_e_cmd_delete_imei          ECmdType = 10001 //清除设备
	ECmdType_e_cmd_delete_cmd           ECmdType = 10002 //清除离线指令
	ECmdType_e_cmd_sms_content          ECmdType = 20000 //统一短信文本指令
)

// Enum value maps for ECmdType.
var (
	ECmdType_name = map[int32]string{
		1:     "e_cmd_dev_heart",
		2:     "e_cmd_dev_phone_report",
		3:     "e_cmd_dev_gps_report",
		4:     "e_cmd_dev_lbs_report",
		5:     "e_cmd_dev_wifi_report",
		6:     "e_cmd_dev_alarm_report",
		7:     "e_cmd_dev_sync_data",
		8:     "e_cmd_dev_location_manual",
		9:     "e_cmd_dev_set_time",
		10:    "e_cmd_dev_set_loop",
		11:    "e_cmd_dev_location_internal",
		12:    "e_cmd_dev_fence_alarm",
		13:    "e_cmd_dev_reset",
		14:    "e_cmd_dev_dormancy",
		15:    "e_cmd_dev_sleep_intval",
		16:    "e_cmd_dev_loc_pre",
		17:    "e_cmd_dev_charge_state",
		18:    "e_cmd_dev_phone_book",
		19:    "e_cmd_dev_listen",
		20:    "e_cmd_dev_report_location_intval",
		21:    "e_cmd_dev_domain_set",
		22:    "e_cmd_dev_set_alarm_state",
		23:    "e_cmd_replay_switch",
		24:    "e_cmd_report_acc_state",
		25:    "e_cmd_sensity",
		26:    "e_cmd_gps_state",
		27:    "e_cmd_fly_mode",
		28:    "e_cmd_dev_stop_gps",
		29:    "e_cmd_dev_stop_lbs",
		30:    "e_cmd_dev_stop_wifi",
		31:    "e_cmd_dev_gsensor_interval",
		32:    "e_cmd_dev_gpsadd_lbs_model",
		33:    "e_cmd_gps_add_lbs_report",
		34:    "e_cmd_stop_gps_add_lbs",
		35:    "e_cmd_shake_value",
		36:    "e_cmd_gps_speed_limit",
		37:    "e_cmd_speed_run_value",
		38:    "e_cmd_inflection",
		39:    "e_cmd_dev_sound_switch",
		40:    "e_cmd_onekey_state",
		50:    "e_cmd_dev_domain_set_t",
		59:    "e_cmd_vor_off",
		60:    "e_cmd_audio_notify",
		61:    "e_cmd_audio_report",
		62:    "e_cmd_audio_mem_not_enough",
		63:    "e_cmd_set_dev_language",
		65:    "e_cmd_set_timer_switch",
		66:    "e_cmd_set_loc_mode",
		67:    "e_cmd_find_dev",
		68:    "e_cmd_get_ext_power_t",
		77:    "e_cmd_led_swtich",
		78:    "e_cmd_pullout_alarm",
		79:    "e_cmd_set_centerphone",
		80:    "e_cmd_set_looptime",
		81:    "e_cmd_dev_set_log_sign",
		82:    "e_cmd_dev_set_low_voltage",
		83:    "e_cmd_dev_set_light_drop",
		84:    "e_cmd_dev_set_close_alarm",
		85:    "e_cmd_dev_set_dev_mode",
		86:    "e_cmd_dev_set_remote_upgrade",
		87:    "e_cmd_dev_set_tracke",
		88:    "e_cmd_dev_text",
		89:    "e_cmd_set_dev_type",
		90:    "e_cmd_set_dev_disconn",
		91:    "e_cmd_dev_sleep_location_intval",
		92:    "e_cmd_start_record",
		93:    "e_cmd_stop_record",
		94:    "e_cmd_query_location",
		95:    "e_cmd_send_message",
		96:    "e_cmd_af_sleep_action",
		97:    "e_cmd_repgps_when_still",
		98:    "e_cmd_if_carry_lbswifi",
		99:    "e_cmd_set_protocol",
		100:   "e_cmd_set_acc_alarm",
		101:   "e_cmd_set_log_level",
		102:   "e_cmd_sms_pass",
		103:   "e_cmd_dyd_gracefully",
		104:   "e_cmd_recover_dyd",
		105:   "e_cmd_dyd_forcely",
		106:   "e_cmd_set_phone_alarm",
		107:   "e_cmd_set_alarm_notify",
		108:   "e_cmd_set_shake_alarm",
		109:   "e_cmd_set_fence_mode",
		110:   "e_cmd_piece_through",
		201:   "e_cmd_alarm_response",
		202:   "e_cmd_gps_addr_response",
		203:   "e_cmd_lbs_addr_response",
		210:   "e_cmd_kks_sms_content",
		301:   "e_cmd_tq_gps_addr_response",
		302:   "e_cmd_tq_sms_content",
		1088:  "e_cmd_admin_check",
		1089:  "e_cmd_sim_msg",
		10001: "e_cmd_delete_imei",
		10002: "e_cmd_delete_cmd",
		20000: "e_cmd_sms_content",
	}
	ECmdType_value = map[string]int32{
		"e_cmd_dev_heart":                  1,
		"e_cmd_dev_phone_report":           2,
		"e_cmd_dev_gps_report":             3,
		"e_cmd_dev_lbs_report":             4,
		"e_cmd_dev_wifi_report":            5,
		"e_cmd_dev_alarm_report":           6,
		"e_cmd_dev_sync_data":              7,
		"e_cmd_dev_location_manual":        8,
		"e_cmd_dev_set_time":               9,
		"e_cmd_dev_set_loop":               10,
		"e_cmd_dev_location_internal":      11,
		"e_cmd_dev_fence_alarm":            12,
		"e_cmd_dev_reset":                  13,
		"e_cmd_dev_dormancy":               14,
		"e_cmd_dev_sleep_intval":           15,
		"e_cmd_dev_loc_pre":                16,
		"e_cmd_dev_charge_state":           17,
		"e_cmd_dev_phone_book":             18,
		"e_cmd_dev_listen":                 19,
		"e_cmd_dev_report_location_intval": 20,
		"e_cmd_dev_domain_set":             21,
		"e_cmd_dev_set_alarm_state":        22,
		"e_cmd_replay_switch":              23,
		"e_cmd_report_acc_state":           24,
		"e_cmd_sensity":                    25,
		"e_cmd_gps_state":                  26,
		"e_cmd_fly_mode":                   27,
		"e_cmd_dev_stop_gps":               28,
		"e_cmd_dev_stop_lbs":               29,
		"e_cmd_dev_stop_wifi":              30,
		"e_cmd_dev_gsensor_interval":       31,
		"e_cmd_dev_gpsadd_lbs_model":       32,
		"e_cmd_gps_add_lbs_report":         33,
		"e_cmd_stop_gps_add_lbs":           34,
		"e_cmd_shake_value":                35,
		"e_cmd_gps_speed_limit":            36,
		"e_cmd_speed_run_value":            37,
		"e_cmd_inflection":                 38,
		"e_cmd_dev_sound_switch":           39,
		"e_cmd_onekey_state":               40,
		"e_cmd_dev_domain_set_t":           50,
		"e_cmd_vor_off":                    59,
		"e_cmd_audio_notify":               60,
		"e_cmd_audio_report":               61,
		"e_cmd_audio_mem_not_enough":       62,
		"e_cmd_set_dev_language":           63,
		"e_cmd_set_timer_switch":           65,
		"e_cmd_set_loc_mode":               66,
		"e_cmd_find_dev":                   67,
		"e_cmd_get_ext_power_t":            68,
		"e_cmd_led_swtich":                 77,
		"e_cmd_pullout_alarm":              78,
		"e_cmd_set_centerphone":            79,
		"e_cmd_set_looptime":               80,
		"e_cmd_dev_set_log_sign":           81,
		"e_cmd_dev_set_low_voltage":        82,
		"e_cmd_dev_set_light_drop":         83,
		"e_cmd_dev_set_close_alarm":        84,
		"e_cmd_dev_set_dev_mode":           85,
		"e_cmd_dev_set_remote_upgrade":     86,
		"e_cmd_dev_set_tracke":             87,
		"e_cmd_dev_text":                   88,
		"e_cmd_set_dev_type":               89,
		"e_cmd_set_dev_disconn":            90,
		"e_cmd_dev_sleep_location_intval":  91,
		"e_cmd_start_record":               92,
		"e_cmd_stop_record":                93,
		"e_cmd_query_location":             94,
		"e_cmd_send_message":               95,
		"e_cmd_af_sleep_action":            96,
		"e_cmd_repgps_when_still":          97,
		"e_cmd_if_carry_lbswifi":           98,
		"e_cmd_set_protocol":               99,
		"e_cmd_set_acc_alarm":              100,
		"e_cmd_set_log_level":              101,
		"e_cmd_sms_pass":                   102,
		"e_cmd_dyd_gracefully":             103,
		"e_cmd_recover_dyd":                104,
		"e_cmd_dyd_forcely":                105,
		"e_cmd_set_phone_alarm":            106,
		"e_cmd_set_alarm_notify":           107,
		"e_cmd_set_shake_alarm":            108,
		"e_cmd_set_fence_mode":             109,
		"e_cmd_piece_through":              110,
		"e_cmd_alarm_response":             201,
		"e_cmd_gps_addr_response":          202,
		"e_cmd_lbs_addr_response":          203,
		"e_cmd_kks_sms_content":            210,
		"e_cmd_tq_gps_addr_response":       301,
		"e_cmd_tq_sms_content":             302,
		"e_cmd_admin_check":                1088,
		"e_cmd_sim_msg":                    1089,
		"e_cmd_delete_imei":                10001,
		"e_cmd_delete_cmd":                 10002,
		"e_cmd_sms_content":                20000,
	}
)

func (x ECmdType) Enum() *ECmdType {
	p := new(ECmdType)
	*p = x
	return p
}

func (x ECmdType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ECmdType) Descriptor() protoreflect.EnumDescriptor {
	return file_gw_proto_enumTypes[11].Descriptor()
}

func (ECmdType) Type() protoreflect.EnumType {
	return &file_gw_proto_enumTypes[11]
}

func (x ECmdType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ECmdType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ECmdType(num)
	return nil
}

// Deprecated: Use ECmdType.Descriptor instead.
func (ECmdType) EnumDescriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{11}
}

type InnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      *EReqType `protobuf:"varint,1000,req,name=type,enum=slxkgw.EReqType" json:"type,omitempty"`
	PurgeImei *uint64   `protobuf:"varint,1,opt,name=purge_imei,json=purgeImei" json:"purge_imei,omitempty"` //待清理imei
	PurgeFd   *uint32   `protobuf:"varint,101,opt,name=purge_fd,json=purgeFd" json:"purge_fd,omitempty"`     //filled by gw
	Imeis     []uint64  `protobuf:"varint,3,rep,name=imeis" json:"imeis,omitempty"`
	ErrImeis  []uint64  `protobuf:"varint,4,rep,name=err_imeis,json=errImeis" json:"err_imeis,omitempty"`
	RmvImeis  []uint64  `protobuf:"varint,6,rep,name=rmv_imeis,json=rmvImeis" json:"rmv_imeis,omitempty"`
	CheckImei *uint64   `protobuf:"varint,7,opt,name=check_imei,json=checkImei" json:"check_imei,omitempty"`
}

func (x *InnerReq) Reset() {
	*x = InnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerReq) ProtoMessage() {}

func (x *InnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerReq.ProtoReflect.Descriptor instead.
func (*InnerReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{0}
}

func (x *InnerReq) GetType() EReqType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EReqType_e_req_purge_fd
}

func (x *InnerReq) GetPurgeImei() uint64 {
	if x != nil && x.PurgeImei != nil {
		return *x.PurgeImei
	}
	return 0
}

func (x *InnerReq) GetPurgeFd() uint32 {
	if x != nil && x.PurgeFd != nil {
		return *x.PurgeFd
	}
	return 0
}

func (x *InnerReq) GetImeis() []uint64 {
	if x != nil {
		return x.Imeis
	}
	return nil
}

func (x *InnerReq) GetErrImeis() []uint64 {
	if x != nil {
		return x.ErrImeis
	}
	return nil
}

func (x *InnerReq) GetRmvImeis() []uint64 {
	if x != nil {
		return x.RmvImeis
	}
	return nil
}

func (x *InnerReq) GetCheckImei() uint64 {
	if x != nil && x.CheckImei != nil {
		return *x.CheckImei
	}
	return 0
}

type InnerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errcode  *EErrCode `protobuf:"varint,1,opt,name=errcode,enum=slxkgw.EErrCode" json:"errcode,omitempty"`
	Msg      *string   `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
	Topimeis []uint64  `protobuf:"varint,3,rep,name=topimeis" json:"topimeis,omitempty"`
	AddQueue []uint64  `protobuf:"varint,4,rep,name=add_queue,json=addQueue" json:"add_queue,omitempty"`
	LocQueue []uint64  `protobuf:"varint,5,rep,name=loc_queue,json=locQueue" json:"loc_queue,omitempty"`
}

func (x *InnerResp) Reset() {
	*x = InnerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResp) ProtoMessage() {}

func (x *InnerResp) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResp.ProtoReflect.Descriptor instead.
func (*InnerResp) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{1}
}

func (x *InnerResp) GetErrcode() EErrCode {
	if x != nil && x.Errcode != nil {
		return *x.Errcode
	}
	return EErrCode_e_err_ok
}

func (x *InnerResp) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

func (x *InnerResp) GetTopimeis() []uint64 {
	if x != nil {
		return x.Topimeis
	}
	return nil
}

func (x *InnerResp) GetAddQueue() []uint64 {
	if x != nil {
		return x.AddQueue
	}
	return nil
}

func (x *InnerResp) GetLocQueue() []uint64 {
	if x != nil {
		return x.LocQueue
	}
	return nil
}

//运行信息，发给分发服务
type GwRunStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip      *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port    *uint32 `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	ConnCnt *uint32 `protobuf:"varint,3,opt,name=conn_cnt,json=connCnt" json:"conn_cnt,omitempty"` //当前设备连接数
}

func (x *GwRunStatus) Reset() {
	*x = GwRunStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GwRunStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GwRunStatus) ProtoMessage() {}

func (x *GwRunStatus) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GwRunStatus.ProtoReflect.Descriptor instead.
func (*GwRunStatus) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{2}
}

func (x *GwRunStatus) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *GwRunStatus) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *GwRunStatus) GetConnCnt() uint32 {
	if x != nil && x.ConnCnt != nil {
		return *x.ConnCnt
	}
	return 0
}

//需要通过高德获得结果
type GaodeReqMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei           *uint64                     `protobuf:"varint,1,req,name=imei" json:"imei,omitempty"`
	Datetime       *uint64                     `protobuf:"varint,2,opt,name=datetime" json:"datetime,omitempty"`
	Mcc            *string                     `protobuf:"bytes,3,opt,name=mcc" json:"mcc,omitempty"`
	Mnc            *string                     `protobuf:"bytes,4,opt,name=mnc" json:"mnc,omitempty"`
	Lbsinfo        []*GaodeReqMsg_LbsInfo      `protobuf:"bytes,5,rep,name=lbsinfo" json:"lbsinfo,omitempty"`
	Wifiinfo       []*GaodeReqMsg_WifiInfo     `protobuf:"bytes,6,rep,name=wifiinfo" json:"wifiinfo,omitempty"`
	Kksdevalarmmsg *GaodeReqMsg_KksDevAlarmMsg `protobuf:"bytes,7,opt,name=kksdevalarmmsg" json:"kksdevalarmmsg,omitempty"`
}

func (x *GaodeReqMsg) Reset() {
	*x = GaodeReqMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GaodeReqMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaodeReqMsg) ProtoMessage() {}

func (x *GaodeReqMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GaodeReqMsg.ProtoReflect.Descriptor instead.
func (*GaodeReqMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{3}
}

func (x *GaodeReqMsg) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *GaodeReqMsg) GetDatetime() uint64 {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return 0
}

func (x *GaodeReqMsg) GetMcc() string {
	if x != nil && x.Mcc != nil {
		return *x.Mcc
	}
	return ""
}

func (x *GaodeReqMsg) GetMnc() string {
	if x != nil && x.Mnc != nil {
		return *x.Mnc
	}
	return ""
}

func (x *GaodeReqMsg) GetLbsinfo() []*GaodeReqMsg_LbsInfo {
	if x != nil {
		return x.Lbsinfo
	}
	return nil
}

func (x *GaodeReqMsg) GetWifiinfo() []*GaodeReqMsg_WifiInfo {
	if x != nil {
		return x.Wifiinfo
	}
	return nil
}

func (x *GaodeReqMsg) GetKksdevalarmmsg() *GaodeReqMsg_KksDevAlarmMsg {
	if x != nil {
		return x.Kksdevalarmmsg
	}
	return nil
}

type LbsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei     *uint64           `protobuf:"varint,1,req,name=imei" json:"imei,omitempty"`
	Seq      *int32            `protobuf:"zigzag32,2,opt,name=seq" json:"seq,omitempty"`
	Datetime *uint64           `protobuf:"varint,3,opt,name=datetime" json:"datetime,omitempty"`
	Systime  *uint64           `protobuf:"varint,4,opt,name=systime" json:"systime,omitempty"`
	Ta       *string           `protobuf:"bytes,5,opt,name=ta" json:"ta,omitempty"`
	Mcc      *string           `protobuf:"bytes,6,opt,name=mcc" json:"mcc,omitempty"`
	Mnc      *string           `protobuf:"bytes,7,opt,name=mnc" json:"mnc,omitempty"`
	Lbsinfo  []*LbsMsg_LbsInfo `protobuf:"bytes,8,rep,name=lbsinfo" json:"lbsinfo,omitempty"`
}

func (x *LbsMsg) Reset() {
	*x = LbsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LbsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LbsMsg) ProtoMessage() {}

func (x *LbsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LbsMsg.ProtoReflect.Descriptor instead.
func (*LbsMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{4}
}

func (x *LbsMsg) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *LbsMsg) GetSeq() int32 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *LbsMsg) GetDatetime() uint64 {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return 0
}

func (x *LbsMsg) GetSystime() uint64 {
	if x != nil && x.Systime != nil {
		return *x.Systime
	}
	return 0
}

func (x *LbsMsg) GetTa() string {
	if x != nil && x.Ta != nil {
		return *x.Ta
	}
	return ""
}

func (x *LbsMsg) GetMcc() string {
	if x != nil && x.Mcc != nil {
		return *x.Mcc
	}
	return ""
}

func (x *LbsMsg) GetMnc() string {
	if x != nil && x.Mnc != nil {
		return *x.Mnc
	}
	return ""
}

func (x *LbsMsg) GetLbsinfo() []*LbsMsg_LbsInfo {
	if x != nil {
		return x.Lbsinfo
	}
	return nil
}

type WifiMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei     *uint64             `protobuf:"varint,1,req,name=imei" json:"imei,omitempty"`
	Seq      *int32              `protobuf:"zigzag32,2,opt,name=seq" json:"seq,omitempty"`
	Datetime *uint64             `protobuf:"varint,3,opt,name=datetime" json:"datetime,omitempty"`
	Systime  *uint64             `protobuf:"varint,4,opt,name=systime" json:"systime,omitempty"`
	Wifiinfo []*WifiMsg_WifiInfo `protobuf:"bytes,5,rep,name=wifiinfo" json:"wifiinfo,omitempty"`
}

func (x *WifiMsg) Reset() {
	*x = WifiMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiMsg) ProtoMessage() {}

func (x *WifiMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiMsg.ProtoReflect.Descriptor instead.
func (*WifiMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{5}
}

func (x *WifiMsg) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *WifiMsg) GetSeq() int32 {
	if x != nil && x.Seq != nil {
		return *x.Seq
	}
	return 0
}

func (x *WifiMsg) GetDatetime() uint64 {
	if x != nil && x.Datetime != nil {
		return *x.Datetime
	}
	return 0
}

func (x *WifiMsg) GetSystime() uint64 {
	if x != nil && x.Systime != nil {
		return *x.Systime
	}
	return 0
}

func (x *WifiMsg) GetWifiinfo() []*WifiMsg_WifiInfo {
	if x != nil {
		return x.Wifiinfo
	}
	return nil
}

type ModeSyncMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode        *uint32 `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	Conntime    *uint32 `protobuf:"varint,2,opt,name=conntime" json:"conntime,omitempty"`
	FlymodeOn   *uint32 `protobuf:"varint,3,opt,name=flymode_on,json=flymodeOn" json:"flymode_on,omitempty"`
	EndDuration *uint32 `protobuf:"varint,4,opt,name=end_duration,json=endDuration" json:"end_duration,omitempty"`
}

func (x *ModeSyncMsg) Reset() {
	*x = ModeSyncMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeSyncMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeSyncMsg) ProtoMessage() {}

func (x *ModeSyncMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeSyncMsg.ProtoReflect.Descriptor instead.
func (*ModeSyncMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{6}
}

func (x *ModeSyncMsg) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *ModeSyncMsg) GetConntime() uint32 {
	if x != nil && x.Conntime != nil {
		return *x.Conntime
	}
	return 0
}

func (x *ModeSyncMsg) GetFlymodeOn() uint32 {
	if x != nil && x.FlymodeOn != nil {
		return *x.FlymodeOn
	}
	return 0
}

func (x *ModeSyncMsg) GetEndDuration() uint32 {
	if x != nil && x.EndDuration != nil {
		return *x.EndDuration
	}
	return 0
}

//设备上报地址
//db:TKV_Location
type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei      *uint64 `protobuf:"varint,1,opt,name=imei" json:"imei,omitempty"`           //设备imei号
	Date      *uint64 `protobuf:"varint,2,opt,name=date" json:"date,omitempty"`           //日期
	Time      *uint64 `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`           //时间戳
	Addr      *string `protobuf:"bytes,4,opt,name=addr" json:"addr,omitempty"`            //地址
	Direction *uint64 `protobuf:"varint,5,opt,name=direction" json:"direction,omitempty"` //方向
	Lat       *int64  `protobuf:"varint,6,opt,name=lat" json:"lat,omitempty"`             //经度
	Lon       *int64  `protobuf:"varint,7,opt,name=lon" json:"lon,omitempty"`             //维度
	Speed     *uint64 `protobuf:"varint,8,opt,name=speed" json:"speed,omitempty"`         //速度
	Type      *uint64 `protobuf:"varint,9,opt,name=type" json:"type,omitempty"`           //所用的定位方式
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{7}
}

func (x *Location) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *Location) GetDate() uint64 {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return 0
}

func (x *Location) GetTime() uint64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *Location) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

func (x *Location) GetDirection() uint64 {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return 0
}

func (x *Location) GetLat() int64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *Location) GetLon() int64 {
	if x != nil && x.Lon != nil {
		return *x.Lon
	}
	return 0
}

func (x *Location) GetSpeed() uint64 {
	if x != nil && x.Speed != nil {
		return *x.Speed
	}
	return 0
}

func (x *Location) GetType() uint64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

//指令日志
//db:xclog.T_Cmd_000
type Cmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key         *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	CosTime     *uint64 `protobuf:"varint,2,opt,name=cos_time,json=cosTime" json:"cos_time,omitempty"`            //响应时间
	BackResult  *string `protobuf:"bytes,3,opt,name=back_result,json=backResult" json:"back_result,omitempty"`    //回复结果
	BackContent *string `protobuf:"bytes,4,opt,name=back_content,json=backContent" json:"back_content,omitempty"` //回复内容
}

func (x *Cmd) Reset() {
	*x = Cmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cmd) ProtoMessage() {}

func (x *Cmd) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cmd.ProtoReflect.Descriptor instead.
func (*Cmd) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{8}
}

func (x *Cmd) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *Cmd) GetCosTime() uint64 {
	if x != nil && x.CosTime != nil {
		return *x.CosTime
	}
	return 0
}

func (x *Cmd) GetBackResult() string {
	if x != nil && x.BackResult != nil {
		return *x.BackResult
	}
	return ""
}

func (x *Cmd) GetBackContent() string {
	if x != nil && x.BackContent != nil {
		return *x.BackContent
	}
	return ""
}

type ModeConfirmMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode      *uint32 `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	ModeType  *uint32 `protobuf:"varint,2,opt,name=mode_type,json=modeType" json:"mode_type,omitempty"`
	ModeValue *uint32 `protobuf:"varint,3,opt,name=mode_value,json=modeValue" json:"mode_value,omitempty"`
}

func (x *ModeConfirmMsg) Reset() {
	*x = ModeConfirmMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeConfirmMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeConfirmMsg) ProtoMessage() {}

func (x *ModeConfirmMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeConfirmMsg.ProtoReflect.Descriptor instead.
func (*ModeConfirmMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{9}
}

func (x *ModeConfirmMsg) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *ModeConfirmMsg) GetModeType() uint32 {
	if x != nil && x.ModeType != nil {
		return *x.ModeType
	}
	return 0
}

func (x *ModeConfirmMsg) GetModeValue() uint32 {
	if x != nil && x.ModeValue != nil {
		return *x.ModeValue
	}
	return 0
}

type OpenDevMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime  *uint32 `protobuf:"varint,1,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EnableTime *uint32 `protobuf:"varint,2,opt,name=enable_time,json=enableTime" json:"enable_time,omitempty"`
	EndTime    *uint32 `protobuf:"varint,3,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
}

func (x *OpenDevMsg) Reset() {
	*x = OpenDevMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenDevMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenDevMsg) ProtoMessage() {}

func (x *OpenDevMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenDevMsg.ProtoReflect.Descriptor instead.
func (*OpenDevMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{10}
}

func (x *OpenDevMsg) GetStartTime() uint32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *OpenDevMsg) GetEnableTime() uint32 {
	if x != nil && x.EnableTime != nil {
		return *x.EnableTime
	}
	return 0
}

func (x *OpenDevMsg) GetEndTime() uint32 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type KksDevAlarmMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei      *uint64 `protobuf:"varint,1,opt,name=imei" json:"imei,omitempty"`
	Alarmcode *uint32 `protobuf:"varint,2,opt,name=alarmcode" json:"alarmcode,omitempty"`
	Lang      *uint32 `protobuf:"varint,3,opt,name=lang" json:"lang,omitempty"`
	Lat       *int64  `protobuf:"varint,4,opt,name=lat" json:"lat,omitempty"`
	Lng       *int64  `protobuf:"varint,5,opt,name=lng" json:"lng,omitempty"`
}

func (x *KksDevAlarmMsg) Reset() {
	*x = KksDevAlarmMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KksDevAlarmMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KksDevAlarmMsg) ProtoMessage() {}

func (x *KksDevAlarmMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KksDevAlarmMsg.ProtoReflect.Descriptor instead.
func (*KksDevAlarmMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{11}
}

func (x *KksDevAlarmMsg) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *KksDevAlarmMsg) GetAlarmcode() uint32 {
	if x != nil && x.Alarmcode != nil {
		return *x.Alarmcode
	}
	return 0
}

func (x *KksDevAlarmMsg) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *KksDevAlarmMsg) GetLat() int64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *KksDevAlarmMsg) GetLng() int64 {
	if x != nil && x.Lng != nil {
		return *x.Lng
	}
	return 0
}

type KksGpsAddrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei      *uint64 `protobuf:"varint,1,opt,name=imei" json:"imei,omitempty"`
	Lang      *uint32 `protobuf:"varint,2,opt,name=lang" json:"lang,omitempty"`
	Lat       *int64  `protobuf:"varint,3,opt,name=lat" json:"lat,omitempty"`
	Lng       *int64  `protobuf:"varint,4,opt,name=lng" json:"lng,omitempty"`
	Phone     *string `protobuf:"bytes,5,opt,name=phone" json:"phone,omitempty"`
	Alarmcode *uint32 `protobuf:"varint,6,opt,name=alarmcode" json:"alarmcode,omitempty"`
}

func (x *KksGpsAddrReq) Reset() {
	*x = KksGpsAddrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KksGpsAddrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KksGpsAddrReq) ProtoMessage() {}

func (x *KksGpsAddrReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KksGpsAddrReq.ProtoReflect.Descriptor instead.
func (*KksGpsAddrReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{12}
}

func (x *KksGpsAddrReq) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *KksGpsAddrReq) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *KksGpsAddrReq) GetLat() int64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *KksGpsAddrReq) GetLng() int64 {
	if x != nil && x.Lng != nil {
		return *x.Lng
	}
	return 0
}

func (x *KksGpsAddrReq) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *KksGpsAddrReq) GetAlarmcode() uint32 {
	if x != nil && x.Alarmcode != nil {
		return *x.Alarmcode
	}
	return 0
}

type KksLbsAddrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei      *uint64 `protobuf:"varint,1,opt,name=imei" json:"imei,omitempty"`
	Mcc       *uint32 `protobuf:"varint,2,opt,name=mcc" json:"mcc,omitempty"`
	Mnc       *uint32 `protobuf:"varint,3,opt,name=mnc" json:"mnc,omitempty"`
	Lac       *uint32 `protobuf:"varint,4,opt,name=lac" json:"lac,omitempty"`
	Cellid    *uint32 `protobuf:"varint,5,opt,name=cellid" json:"cellid,omitempty"`
	Phone     *string `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Lang      *uint32 `protobuf:"varint,7,opt,name=lang" json:"lang,omitempty"`
	Alarmcode *uint32 `protobuf:"varint,8,opt,name=alarmcode" json:"alarmcode,omitempty"`
}

func (x *KksLbsAddrReq) Reset() {
	*x = KksLbsAddrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KksLbsAddrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KksLbsAddrReq) ProtoMessage() {}

func (x *KksLbsAddrReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KksLbsAddrReq.ProtoReflect.Descriptor instead.
func (*KksLbsAddrReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{13}
}

func (x *KksLbsAddrReq) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *KksLbsAddrReq) GetMcc() uint32 {
	if x != nil && x.Mcc != nil {
		return *x.Mcc
	}
	return 0
}

func (x *KksLbsAddrReq) GetMnc() uint32 {
	if x != nil && x.Mnc != nil {
		return *x.Mnc
	}
	return 0
}

func (x *KksLbsAddrReq) GetLac() uint32 {
	if x != nil && x.Lac != nil {
		return *x.Lac
	}
	return 0
}

func (x *KksLbsAddrReq) GetCellid() uint32 {
	if x != nil && x.Cellid != nil {
		return *x.Cellid
	}
	return 0
}

func (x *KksLbsAddrReq) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *KksLbsAddrReq) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *KksLbsAddrReq) GetAlarmcode() uint32 {
	if x != nil && x.Alarmcode != nil {
		return *x.Alarmcode
	}
	return 0
}

type TqGpsAddrReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei *uint64 `protobuf:"varint,1,opt,name=imei" json:"imei,omitempty"`
	Lat  *int64  `protobuf:"varint,2,opt,name=lat" json:"lat,omitempty"`
	Lng  *int64  `protobuf:"varint,3,opt,name=lng" json:"lng,omitempty"`
}

func (x *TqGpsAddrReq) Reset() {
	*x = TqGpsAddrReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TqGpsAddrReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TqGpsAddrReq) ProtoMessage() {}

func (x *TqGpsAddrReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TqGpsAddrReq.ProtoReflect.Descriptor instead.
func (*TqGpsAddrReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{14}
}

func (x *TqGpsAddrReq) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *TqGpsAddrReq) GetLat() int64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *TqGpsAddrReq) GetLng() int64 {
	if x != nil && x.Lng != nil {
		return *x.Lng
	}
	return 0
}

type LbsInfoCollect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LbsMsg *GaodeReqMsg `protobuf:"bytes,1,opt,name=lbs_msg,json=lbsMsg" json:"lbs_msg,omitempty"`
	Lat    *int32       `protobuf:"varint,2,opt,name=lat" json:"lat,omitempty"` //gps定位纬度
	Lng    *int32       `protobuf:"varint,3,opt,name=lng" json:"lng,omitempty"` //gps定位经度
}

func (x *LbsInfoCollect) Reset() {
	*x = LbsInfoCollect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LbsInfoCollect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LbsInfoCollect) ProtoMessage() {}

func (x *LbsInfoCollect) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LbsInfoCollect.ProtoReflect.Descriptor instead.
func (*LbsInfoCollect) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{15}
}

func (x *LbsInfoCollect) GetLbsMsg() *GaodeReqMsg {
	if x != nil {
		return x.LbsMsg
	}
	return nil
}

func (x *LbsInfoCollect) GetLat() int32 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *LbsInfoCollect) GetLng() int32 {
	if x != nil && x.Lng != nil {
		return *x.Lng
	}
	return 0
}

//通用消息，发送给CommonConsumer
type CommonMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgType             *ECommonMsgType `protobuf:"varint,1,req,name=msg_type,json=msgType,enum=slxkgw.ECommonMsgType" json:"msg_type,omitempty"`
	Imei                *uint64         `protobuf:"varint,2,req,name=imei" json:"imei,omitempty"`
	ModeSyncMsg         *ModeSyncMsg    `protobuf:"bytes,3,opt,name=mode_sync_msg,json=modeSyncMsg" json:"mode_sync_msg,omitempty"`
	LocationMsg         *Location       `protobuf:"bytes,4,opt,name=location_msg,json=locationMsg" json:"location_msg,omitempty"`
	ModeConfirmMsg      *ModeConfirmMsg `protobuf:"bytes,5,opt,name=mode_confirm_msg,json=modeConfirmMsg" json:"mode_confirm_msg,omitempty"`
	OpenDevMsg          *OpenDevMsg     `protobuf:"bytes,6,opt,name=open_dev_msg,json=openDevMsg" json:"open_dev_msg,omitempty"`
	KksDevAlarmMsg      *KksDevAlarmMsg `protobuf:"bytes,7,opt,name=kks_dev_alarm_msg,json=kksDevAlarmMsg" json:"kks_dev_alarm_msg,omitempty"`
	KksGpsAddrReq       *KksGpsAddrReq  `protobuf:"bytes,8,opt,name=kks_gps_addr_req,json=kksGpsAddrReq" json:"kks_gps_addr_req,omitempty"`
	KksLbsAddrReq       *KksLbsAddrReq  `protobuf:"bytes,9,opt,name=kks_lbs_addr_req,json=kksLbsAddrReq" json:"kks_lbs_addr_req,omitempty"`
	CmdResponse         *Cmd            `protobuf:"bytes,10,opt,name=cmd_response,json=cmdResponse" json:"cmd_response,omitempty"`
	TqGpsAddrReq        *TqGpsAddrReq   `protobuf:"bytes,11,opt,name=tq_gps_addr_req,json=tqGpsAddrReq" json:"tq_gps_addr_req,omitempty"`
	LbsInfoCollect      *LbsInfoCollect `protobuf:"bytes,12,opt,name=lbs_info_collect,json=lbsInfoCollect" json:"lbs_info_collect,omitempty"`
	KksGt06EDevAlarmMsg *KksDevAlarmMsg `protobuf:"bytes,13,opt,name=kks_gt06e_dev_alarm_msg,json=kksGt06eDevAlarmMsg" json:"kks_gt06e_dev_alarm_msg,omitempty"`
	KksGt06EGpsAddrReq  *KksGpsAddrReq  `protobuf:"bytes,14,opt,name=kks_gt06e_gps_addr_req,json=kksGt06eGpsAddrReq" json:"kks_gt06e_gps_addr_req,omitempty"`
	KksGt06ELbsAddrReq  *KksLbsAddrReq  `protobuf:"bytes,15,opt,name=kks_gt06e_lbs_addr_req,json=kksGt06eLbsAddrReq" json:"kks_gt06e_lbs_addr_req,omitempty"`
}

func (x *CommonMsg) Reset() {
	*x = CommonMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonMsg) ProtoMessage() {}

func (x *CommonMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonMsg.ProtoReflect.Descriptor instead.
func (*CommonMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{16}
}

func (x *CommonMsg) GetMsgType() ECommonMsgType {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return ECommonMsgType_e_modesync
}

func (x *CommonMsg) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *CommonMsg) GetModeSyncMsg() *ModeSyncMsg {
	if x != nil {
		return x.ModeSyncMsg
	}
	return nil
}

func (x *CommonMsg) GetLocationMsg() *Location {
	if x != nil {
		return x.LocationMsg
	}
	return nil
}

func (x *CommonMsg) GetModeConfirmMsg() *ModeConfirmMsg {
	if x != nil {
		return x.ModeConfirmMsg
	}
	return nil
}

func (x *CommonMsg) GetOpenDevMsg() *OpenDevMsg {
	if x != nil {
		return x.OpenDevMsg
	}
	return nil
}

func (x *CommonMsg) GetKksDevAlarmMsg() *KksDevAlarmMsg {
	if x != nil {
		return x.KksDevAlarmMsg
	}
	return nil
}

func (x *CommonMsg) GetKksGpsAddrReq() *KksGpsAddrReq {
	if x != nil {
		return x.KksGpsAddrReq
	}
	return nil
}

func (x *CommonMsg) GetKksLbsAddrReq() *KksLbsAddrReq {
	if x != nil {
		return x.KksLbsAddrReq
	}
	return nil
}

func (x *CommonMsg) GetCmdResponse() *Cmd {
	if x != nil {
		return x.CmdResponse
	}
	return nil
}

func (x *CommonMsg) GetTqGpsAddrReq() *TqGpsAddrReq {
	if x != nil {
		return x.TqGpsAddrReq
	}
	return nil
}

func (x *CommonMsg) GetLbsInfoCollect() *LbsInfoCollect {
	if x != nil {
		return x.LbsInfoCollect
	}
	return nil
}

func (x *CommonMsg) GetKksGt06EDevAlarmMsg() *KksDevAlarmMsg {
	if x != nil {
		return x.KksGt06EDevAlarmMsg
	}
	return nil
}

func (x *CommonMsg) GetKksGt06EGpsAddrReq() *KksGpsAddrReq {
	if x != nil {
		return x.KksGt06EGpsAddrReq
	}
	return nil
}

func (x *CommonMsg) GetKksGt06ELbsAddrReq() *KksLbsAddrReq {
	if x != nil {
		return x.KksGt06ELbsAddrReq
	}
	return nil
}

type IccidVersionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei    *uint64 `protobuf:"varint,1,req,name=imei" json:"imei,omitempty"`
	Iccid   *string `protobuf:"bytes,2,req,name=iccid" json:"iccid,omitempty"`
	Devtype *string `protobuf:"bytes,3,opt,name=devtype" json:"devtype,omitempty"`
	Version *string `protobuf:"bytes,4,opt,name=version" json:"version,omitempty"`
}

func (x *IccidVersionInfo) Reset() {
	*x = IccidVersionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IccidVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IccidVersionInfo) ProtoMessage() {}

func (x *IccidVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IccidVersionInfo.ProtoReflect.Descriptor instead.
func (*IccidVersionInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{17}
}

func (x *IccidVersionInfo) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *IccidVersionInfo) GetIccid() string {
	if x != nil && x.Iccid != nil {
		return *x.Iccid
	}
	return ""
}

func (x *IccidVersionInfo) GetDevtype() string {
	if x != nil && x.Devtype != nil {
		return *x.Devtype
	}
	return ""
}

func (x *IccidVersionInfo) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

type AudioRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei        *uint64     `protobuf:"varint,1,opt,name=imei" json:"imei,omitempty"`
	Data        []byte      `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	StartTime   *int64      `protobuf:"varint,3,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime     *int64      `protobuf:"varint,4,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	Type        *EAudioType `protobuf:"varint,5,opt,name=type,enum=slxkgw.EAudioType" json:"type,omitempty"`
	FirstPacket *bool       `protobuf:"varint,6,opt,name=first_packet,json=firstPacket" json:"first_packet,omitempty"`
	Timerfd     *uint32     `protobuf:"varint,7,opt,name=timerfd" json:"timerfd,omitempty"`
	PkgCnt      *uint32     `protobuf:"varint,8,opt,name=pkg_cnt,json=pkgCnt" json:"pkg_cnt,omitempty"`
}

func (x *AudioRecord) Reset() {
	*x = AudioRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRecord) ProtoMessage() {}

func (x *AudioRecord) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRecord.ProtoReflect.Descriptor instead.
func (*AudioRecord) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{18}
}

func (x *AudioRecord) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *AudioRecord) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AudioRecord) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *AudioRecord) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

func (x *AudioRecord) GetType() EAudioType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return EAudioType_e_short_audio
}

func (x *AudioRecord) GetFirstPacket() bool {
	if x != nil && x.FirstPacket != nil {
		return *x.FirstPacket
	}
	return false
}

func (x *AudioRecord) GetTimerfd() uint32 {
	if x != nil && x.Timerfd != nil {
		return *x.Timerfd
	}
	return 0
}

func (x *AudioRecord) GetPkgCnt() uint32 {
	if x != nil && x.PkgCnt != nil {
		return *x.PkgCnt
	}
	return 0
}

type DevParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speedvalue     *uint32 `protobuf:"varint,1,opt,name=speedvalue" json:"speedvalue,omitempty"`          //超速阈值
	Delicacy       *uint32 `protobuf:"varint,2,opt,name=delicacy" json:"delicacy,omitempty"`              //灵敏度
	Shakevalue     *uint32 `protobuf:"varint,3,opt,name=shakevalue" json:"shakevalue,omitempty"`          //震动报警程度0-关闭（1~5）
	Lowpower       *uint32 `protobuf:"varint,4,opt,name=lowpower" json:"lowpower,omitempty"`              //低电报警 （0关 1开）默认开启
	Outlaram       *uint32 `protobuf:"varint,5,opt,name=outlaram" json:"outlaram,omitempty"`              //断电报警（拆除报警）（0关 1开）默认开启
	Dropalarm      *uint32 `protobuf:"varint,6,opt,name=dropalarm" json:"dropalarm,omitempty"`            //脱落报警（0关 1开）默认开启
	Indicatorlight *uint32 `protobuf:"varint,7,opt,name=indicatorlight" json:"indicatorlight,omitempty"`  //指示灯 0关闭，1打开
	Closeswitch    *uint32 `protobuf:"varint,8,opt,name=closeswitch" json:"closeswitch,omitempty"`        //关机报警（0关 1开）默认开启
	Openswitch     *uint32 `protobuf:"varint,9,opt,name=openswitch" json:"openswitch,omitempty"`          //开机报警 启动报警
	Offswitch      *uint32 `protobuf:"varint,10,opt,name=offswitch" json:"offswitch,omitempty"`           //离线报警
	Replaystate    *uint32 `protobuf:"varint,11,opt,name=replaystate" json:"replaystate,omitempty"`       //继电器开关状态 0-已断开 1-正常
	Soundswitch    *uint32 `protobuf:"varint,12,opt,name=soundswitch" json:"soundswitch,omitempty"`       //声音提示开关 （0关 1开），默认开启
	Language       *uint32 `protobuf:"varint,13,opt,name=language" json:"language,omitempty"`             //设备当前语言 0：英文   1：中文，默认中文
	Listen         *uint32 `protobuf:"varint,14,opt,name=listen" json:"listen,omitempty"`                 //0-监听模式(默认) 单向 1-通话模式 双向
	Phonebook      *string `protobuf:"bytes,15,opt,name=phonebook" json:"phonebook,omitempty"`            //设备电话本（管理员号码集合 用来唤醒设备）json字符串数组如:["15090011988","13108789898"]
	Centerphone    *string `protobuf:"bytes,16,opt,name=centerphone" json:"centerphone,omitempty"`        //中心号码
	Starttime      *string `protobuf:"bytes,17,opt,name=starttime" json:"starttime,omitempty"`            //报警时间段 00:00:00
	Endtime        *string `protobuf:"bytes,18,opt,name=endtime" json:"endtime,omitempty"`                //报警时间段 00:00:00
	Fenceswitch    *uint32 `protobuf:"varint,19,opt,name=fenceswitch" json:"fenceswitch,omitempty"`       //围栏开关 (0-进围栏 1-出围栏 2-进出围栏 3-关闭)
	Lbsswitch      *uint32 `protobuf:"varint,20,opt,name=lbsswitch" json:"lbsswitch,omitempty"`           //基站开关 0-关闭 1-打开
	Isdisconn      *uint32 `protobuf:"varint,21,opt,name=isdisconn" json:"isdisconn,omitempty"`           //是否断网 0-不断(默认) 1-断网
	Sleeplocintval *uint32 `protobuf:"varint,22,opt,name=sleeplocintval" json:"sleeplocintval,omitempty"` //休眠定位上报间隔 单位秒 默认600s
	Sportlocintval *uint32 `protobuf:"varint,23,opt,name=sportlocintval" json:"sportlocintval,omitempty"` //运动定位上报间隔 单位秒 默认30s
}

func (x *DevParam) Reset() {
	*x = DevParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevParam) ProtoMessage() {}

func (x *DevParam) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevParam.ProtoReflect.Descriptor instead.
func (*DevParam) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{19}
}

func (x *DevParam) GetSpeedvalue() uint32 {
	if x != nil && x.Speedvalue != nil {
		return *x.Speedvalue
	}
	return 0
}

func (x *DevParam) GetDelicacy() uint32 {
	if x != nil && x.Delicacy != nil {
		return *x.Delicacy
	}
	return 0
}

func (x *DevParam) GetShakevalue() uint32 {
	if x != nil && x.Shakevalue != nil {
		return *x.Shakevalue
	}
	return 0
}

func (x *DevParam) GetLowpower() uint32 {
	if x != nil && x.Lowpower != nil {
		return *x.Lowpower
	}
	return 0
}

func (x *DevParam) GetOutlaram() uint32 {
	if x != nil && x.Outlaram != nil {
		return *x.Outlaram
	}
	return 0
}

func (x *DevParam) GetDropalarm() uint32 {
	if x != nil && x.Dropalarm != nil {
		return *x.Dropalarm
	}
	return 0
}

func (x *DevParam) GetIndicatorlight() uint32 {
	if x != nil && x.Indicatorlight != nil {
		return *x.Indicatorlight
	}
	return 0
}

func (x *DevParam) GetCloseswitch() uint32 {
	if x != nil && x.Closeswitch != nil {
		return *x.Closeswitch
	}
	return 0
}

func (x *DevParam) GetOpenswitch() uint32 {
	if x != nil && x.Openswitch != nil {
		return *x.Openswitch
	}
	return 0
}

func (x *DevParam) GetOffswitch() uint32 {
	if x != nil && x.Offswitch != nil {
		return *x.Offswitch
	}
	return 0
}

func (x *DevParam) GetReplaystate() uint32 {
	if x != nil && x.Replaystate != nil {
		return *x.Replaystate
	}
	return 0
}

func (x *DevParam) GetSoundswitch() uint32 {
	if x != nil && x.Soundswitch != nil {
		return *x.Soundswitch
	}
	return 0
}

func (x *DevParam) GetLanguage() uint32 {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return 0
}

func (x *DevParam) GetListen() uint32 {
	if x != nil && x.Listen != nil {
		return *x.Listen
	}
	return 0
}

func (x *DevParam) GetPhonebook() string {
	if x != nil && x.Phonebook != nil {
		return *x.Phonebook
	}
	return ""
}

func (x *DevParam) GetCenterphone() string {
	if x != nil && x.Centerphone != nil {
		return *x.Centerphone
	}
	return ""
}

func (x *DevParam) GetStarttime() string {
	if x != nil && x.Starttime != nil {
		return *x.Starttime
	}
	return ""
}

func (x *DevParam) GetEndtime() string {
	if x != nil && x.Endtime != nil {
		return *x.Endtime
	}
	return ""
}

func (x *DevParam) GetFenceswitch() uint32 {
	if x != nil && x.Fenceswitch != nil {
		return *x.Fenceswitch
	}
	return 0
}

func (x *DevParam) GetLbsswitch() uint32 {
	if x != nil && x.Lbsswitch != nil {
		return *x.Lbsswitch
	}
	return 0
}

func (x *DevParam) GetIsdisconn() uint32 {
	if x != nil && x.Isdisconn != nil {
		return *x.Isdisconn
	}
	return 0
}

func (x *DevParam) GetSleeplocintval() uint32 {
	if x != nil && x.Sleeplocintval != nil {
		return *x.Sleeplocintval
	}
	return 0
}

func (x *DevParam) GetSportlocintval() uint32 {
	if x != nil && x.Sportlocintval != nil {
		return *x.Sportlocintval
	}
	return 0
}

//设备请求下一个周期定位时间
type DevGetLooplocRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei *string `protobuf:"bytes,1,req,name=imei" json:"imei,omitempty"`
}

func (x *DevGetLooplocRequest) Reset() {
	*x = DevGetLooplocRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DevGetLooplocRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DevGetLooplocRequest) ProtoMessage() {}

func (x *DevGetLooplocRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DevGetLooplocRequest.ProtoReflect.Descriptor instead.
func (*DevGetLooplocRequest) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{20}
}

func (x *DevGetLooplocRequest) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

type PhoneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone     *string `protobuf:"bytes,1,req,name=phone" json:"phone,omitempty"`                          //电话
	PhoneName *string `protobuf:"bytes,2,opt,name=phone_name,json=phoneName" json:"phone_name,omitempty"` //联系人
}

func (x *PhoneInfo) Reset() {
	*x = PhoneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneInfo) ProtoMessage() {}

func (x *PhoneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneInfo.ProtoReflect.Descriptor instead.
func (*PhoneInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{21}
}

func (x *PhoneInfo) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *PhoneInfo) GetPhoneName() string {
	if x != nil && x.PhoneName != nil {
		return *x.PhoneName
	}
	return ""
}

type PhoneBookData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     *PHONESTATE  `protobuf:"varint,1,req,name=state,enum=slxkgw.PHONESTATE" json:"state,omitempty"`
	PhoneInfo []*PhoneInfo `protobuf:"bytes,2,rep,name=phone_info,json=phoneInfo" json:"phone_info,omitempty"`
}

func (x *PhoneBookData) Reset() {
	*x = PhoneBookData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneBookData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneBookData) ProtoMessage() {}

func (x *PhoneBookData) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneBookData.ProtoReflect.Descriptor instead.
func (*PhoneBookData) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{22}
}

func (x *PhoneBookData) GetState() PHONESTATE {
	if x != nil && x.State != nil {
		return *x.State
	}
	return PHONESTATE_PHONE_INCOMING
}

func (x *PhoneBookData) GetPhoneInfo() []*PhoneInfo {
	if x != nil {
		return x.PhoneInfo
	}
	return nil
}

//IP端口设置
type ChangeIpPort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip    *string `protobuf:"bytes,1,req,name=ip" json:"ip,omitempty"`
	Port  *uint32 `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *ChangeIpPort) Reset() {
	*x = ChangeIpPort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeIpPort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeIpPort) ProtoMessage() {}

func (x *ChangeIpPort) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeIpPort.ProtoReflect.Descriptor instead.
func (*ChangeIpPort) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{23}
}

func (x *ChangeIpPort) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *ChangeIpPort) GetPort() uint32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *ChangeIpPort) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type TerminalSetPhoneBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Op        *SETPHONEBOOKSTATE `protobuf:"varint,1,req,name=op,enum=slxkgw.SETPHONEBOOKSTATE" json:"op,omitempty"`
	PhoneData []*PhoneBookData   `protobuf:"bytes,2,rep,name=phone_data,json=phoneData" json:"phone_data,omitempty"`
	Cmdid     *string            `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *TerminalSetPhoneBook) Reset() {
	*x = TerminalSetPhoneBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminalSetPhoneBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalSetPhoneBook) ProtoMessage() {}

func (x *TerminalSetPhoneBook) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalSetPhoneBook.ProtoReflect.Descriptor instead.
func (*TerminalSetPhoneBook) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{24}
}

func (x *TerminalSetPhoneBook) GetOp() SETPHONEBOOKSTATE {
	if x != nil && x.Op != nil {
		return *x.Op
	}
	return SETPHONEBOOKSTATE_PHONE_BOOK_DEL
}

func (x *TerminalSetPhoneBook) GetPhoneData() []*PhoneBookData {
	if x != nil {
		return x.PhoneData
	}
	return nil
}

func (x *TerminalSetPhoneBook) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type RoteLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rote  *LoopType `protobuf:"varint,1,req,name=rote,enum=slxkgw.LoopType" json:"rote,omitempty"`
	Timer *string   `protobuf:"bytes,2,opt,name=timer" json:"timer,omitempty"`
}

func (x *RoteLocation) Reset() {
	*x = RoteLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoteLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoteLocation) ProtoMessage() {}

func (x *RoteLocation) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoteLocation.ProtoReflect.Descriptor instead.
func (*RoteLocation) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{25}
}

func (x *RoteLocation) GetRote() LoopType {
	if x != nil && x.Rote != nil {
		return *x.Rote
	}
	return LoopType_E_LOOP_LOCATION_CANCEL
}

func (x *RoteLocation) GetTimer() string {
	if x != nil && x.Timer != nil {
		return *x.Timer
	}
	return ""
}

type UpdateLooplocData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locweek  *uint32  `protobuf:"varint,1,req,name=locweek" json:"locweek,omitempty"`  // 星期几 0 到6
	Locvalue []string `protobuf:"bytes,2,rep,name=locvalue" json:"locvalue,omitempty"` // 这一天的某些时间点这个数据有小到大
}

func (x *UpdateLooplocData) Reset() {
	*x = UpdateLooplocData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLooplocData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLooplocData) ProtoMessage() {}

func (x *UpdateLooplocData) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLooplocData.ProtoReflect.Descriptor instead.
func (*UpdateLooplocData) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateLooplocData) GetLocweek() uint32 {
	if x != nil && x.Locweek != nil {
		return *x.Locweek
	}
	return 0
}

func (x *UpdateLooplocData) GetLocvalue() []string {
	if x != nil {
		return x.Locvalue
	}
	return nil
}

type WeekInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Week  []uint32 `protobuf:"varint,1,rep,name=week" json:"week,omitempty"`
	Value *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
}

func (x *WeekInfo) Reset() {
	*x = WeekInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeekInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeekInfo) ProtoMessage() {}

func (x *WeekInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeekInfo.ProtoReflect.Descriptor instead.
func (*WeekInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{27}
}

func (x *WeekInfo) GetWeek() []uint32 {
	if x != nil {
		return x.Week
	}
	return nil
}

func (x *WeekInfo) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type UpdateLooplocInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Loctype   *uint32              `protobuf:"varint,1,req,name=loctype" json:"loctype,omitempty"`     // 0表示周期定位，1表示实时定位
	Locintval *uint32              `protobuf:"varint,2,opt,name=locintval" json:"locintval,omitempty"` // 若为实时定位时，定位间隔 s
	Info      *WeekInfo            `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	Loc       []*UpdateLooplocData `protobuf:"bytes,4,rep,name=loc" json:"loc,omitempty"`
	Cmdid     *string              `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *UpdateLooplocInfo) Reset() {
	*x = UpdateLooplocInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLooplocInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLooplocInfo) ProtoMessage() {}

func (x *UpdateLooplocInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLooplocInfo.ProtoReflect.Descriptor instead.
func (*UpdateLooplocInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateLooplocInfo) GetLoctype() uint32 {
	if x != nil && x.Loctype != nil {
		return *x.Loctype
	}
	return 0
}

func (x *UpdateLooplocInfo) GetLocintval() uint32 {
	if x != nil && x.Locintval != nil {
		return *x.Locintval
	}
	return 0
}

func (x *UpdateLooplocInfo) GetInfo() *WeekInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UpdateLooplocInfo) GetLoc() []*UpdateLooplocData {
	if x != nil {
		return x.Loc
	}
	return nil
}

func (x *UpdateLooplocInfo) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//设置中心号码
type UpdateCenterPhone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone *string `protobuf:"bytes,1,req,name=phone" json:"phone,omitempty"`
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *UpdateCenterPhone) Reset() {
	*x = UpdateCenterPhone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCenterPhone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCenterPhone) ProtoMessage() {}

func (x *UpdateCenterPhone) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCenterPhone.ProtoReflect.Descriptor instead.
func (*UpdateCenterPhone) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateCenterPhone) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *UpdateCenterPhone) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type SetRtlsMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode  *uint32 `protobuf:"varint,1,req,name=mode" json:"mode,omitempty"`
	Value *uint32 `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *SetRtlsMode) Reset() {
	*x = SetRtlsMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRtlsMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRtlsMode) ProtoMessage() {}

func (x *SetRtlsMode) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRtlsMode.ProtoReflect.Descriptor instead.
func (*SetRtlsMode) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{30}
}

func (x *SetRtlsMode) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *SetRtlsMode) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *SetRtlsMode) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type SetLocMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//1.常用模式，5.智能模式，6.待机模式，待机模式按照设定的时间每天连接服务器一次，7.省电模式：关闭拐角补传，设定加大定位间隔；8.点名模式：服务器通过下发8201协议来主动获取定位，设备回复0201上传位置信息
	Mode  *uint32 `protobuf:"varint,1,req,name=mode" json:"mode,omitempty"`
	Timer *string `protobuf:"bytes,2,opt,name=timer" json:"timer,omitempty"`  //for 6, 1 and 5 use default 0000
	Value *uint32 `protobuf:"varint,3,opt,name=value" json:"value,omitempty"` //for 7
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *SetLocMode) Reset() {
	*x = SetLocMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocMode) ProtoMessage() {}

func (x *SetLocMode) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocMode.ProtoReflect.Descriptor instead.
func (*SetLocMode) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{31}
}

func (x *SetLocMode) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *SetLocMode) GetTimer() string {
	if x != nil && x.Timer != nil {
		return *x.Timer
	}
	return ""
}

func (x *SetLocMode) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *SetLocMode) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type UpdateLoopSwitchInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Looptype *uint32  `protobuf:"varint,1,req,name=looptype" json:"looptype,omitempty"` //定时模式: 0-每天，1-每月，2-当月 3表示取消
	Timer    []string `protobuf:"bytes,2,rep,name=timer" json:"timer,omitempty"`        //定时开关时间段最多三组 不填表示关闭定时开关机 时间不能重叠, eg:09:05-10:39
	Days     []uint32 `protobuf:"varint,3,rep,name=days" json:"days,omitempty"`         //模式为1或2时,上传该参数 例如:1 2 13 25 31 范围(1-31)
	Cmdid    *string  `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *UpdateLoopSwitchInfo) Reset() {
	*x = UpdateLoopSwitchInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLoopSwitchInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLoopSwitchInfo) ProtoMessage() {}

func (x *UpdateLoopSwitchInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLoopSwitchInfo.ProtoReflect.Descriptor instead.
func (*UpdateLoopSwitchInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateLoopSwitchInfo) GetLooptype() uint32 {
	if x != nil && x.Looptype != nil {
		return *x.Looptype
	}
	return 0
}

func (x *UpdateLoopSwitchInfo) GetTimer() []string {
	if x != nil {
		return x.Timer
	}
	return nil
}

func (x *UpdateLoopSwitchInfo) GetDays() []uint32 {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *UpdateLoopSwitchInfo) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type TrackingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account       *string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`                                   //操作账号
	Imei          *string `protobuf:"bytes,2,req,name=imei" json:"imei,omitempty"`                                         //临时位置跟踪的设备IMEI
	IntervalTime  *uint32 `protobuf:"varint,3,req,name=interval_time,json=intervalTime" json:"interval_time,omitempty"`    //跟踪控制的设备上报时间间隔 0-取消追踪
	EffectiveTime *uint32 `protobuf:"varint,4,opt,name=effective_time,json=effectiveTime" json:"effective_time,omitempty"` //位置跟踪有效期
	SessionId     *uint64 `protobuf:"varint,5,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Cmdid         *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *TrackingRequest) Reset() {
	*x = TrackingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrackingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrackingRequest) ProtoMessage() {}

func (x *TrackingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrackingRequest.ProtoReflect.Descriptor instead.
func (*TrackingRequest) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{33}
}

func (x *TrackingRequest) GetAccount() string {
	if x != nil && x.Account != nil {
		return *x.Account
	}
	return ""
}

func (x *TrackingRequest) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *TrackingRequest) GetIntervalTime() uint32 {
	if x != nil && x.IntervalTime != nil {
		return *x.IntervalTime
	}
	return 0
}

func (x *TrackingRequest) GetEffectiveTime() uint32 {
	if x != nil && x.EffectiveTime != nil {
		return *x.EffectiveTime
	}
	return 0
}

func (x *TrackingRequest) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *TrackingRequest) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//短信透传指令(设置与回复)
type SetDevText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei   *string `protobuf:"bytes,1,req,name=imei" json:"imei,omitempty"`      //设备号
	Info   *string `protobuf:"bytes,2,req,name=info" json:"info,omitempty"`      //透传消息内容(或设备回复内容)
	Number *uint32 `protobuf:"varint,3,req,name=number" json:"number,omitempty"` //消息流水号
	Cmdid  *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *SetDevText) Reset() {
	*x = SetDevText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDevText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDevText) ProtoMessage() {}

func (x *SetDevText) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDevText.ProtoReflect.Descriptor instead.
func (*SetDevText) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{34}
}

func (x *SetDevText) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *SetDevText) GetInfo() string {
	if x != nil && x.Info != nil {
		return *x.Info
	}
	return ""
}

func (x *SetDevText) GetNumber() uint32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *SetDevText) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//通用开关
type CommonSwitch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable *uint32 `protobuf:"varint,1,req,name=enable" json:"enable,omitempty"` //0:关，1:开
	Cmdid  *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *CommonSwitch) Reset() {
	*x = CommonSwitch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonSwitch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonSwitch) ProtoMessage() {}

func (x *CommonSwitch) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonSwitch.ProtoReflect.Descriptor instead.
func (*CommonSwitch) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{35}
}

func (x *CommonSwitch) GetEnable() uint32 {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return 0
}

func (x *CommonSwitch) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//通用设置
type CommonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *uint32 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *CommonConfig) Reset() {
	*x = CommonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonConfig) ProtoMessage() {}

func (x *CommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonConfig.ProtoReflect.Descriptor instead.
func (*CommonConfig) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{36}
}

func (x *CommonConfig) GetValue() uint32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *CommonConfig) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//通用设置
type ImeiMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *uint64 `protobuf:"varint,1,req,name=value" json:"value,omitempty"`
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *ImeiMsg) Reset() {
	*x = ImeiMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImeiMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImeiMsg) ProtoMessage() {}

func (x *ImeiMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImeiMsg.ProtoReflect.Descriptor instead.
func (*ImeiMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{37}
}

func (x *ImeiMsg) GetValue() uint64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

func (x *ImeiMsg) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//修改设备类型
type DeviceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceType *string `protobuf:"bytes,1,req,name=deviceType" json:"deviceType,omitempty"`
	Cmdid      *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *DeviceType) Reset() {
	*x = DeviceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceType) ProtoMessage() {}

func (x *DeviceType) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceType.ProtoReflect.Descriptor instead.
func (*DeviceType) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{38}
}

func (x *DeviceType) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *DeviceType) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//开启录音
type StartRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeInSeconds *uint32 `protobuf:"varint,1,req,name=time_in_seconds,json=timeInSeconds" json:"time_in_seconds,omitempty"`
	SessionId     *uint64 `protobuf:"varint,2,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Cmdid         *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *StartRecord) Reset() {
	*x = StartRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecord) ProtoMessage() {}

func (x *StartRecord) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecord.ProtoReflect.Descriptor instead.
func (*StartRecord) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{39}
}

func (x *StartRecord) GetTimeInSeconds() uint32 {
	if x != nil && x.TimeInSeconds != nil {
		return *x.TimeInSeconds
	}
	return 0
}

func (x *StartRecord) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *StartRecord) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//停止录音
type StopRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *uint64 `protobuf:"varint,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Cmdid     *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *StopRecord) Reset() {
	*x = StopRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRecord) ProtoMessage() {}

func (x *StopRecord) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRecord.ProtoReflect.Descriptor instead.
func (*StopRecord) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{40}
}

func (x *StopRecord) GetSessionId() uint64 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *StopRecord) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//设备主动请求周期定位数据
type SyncLoopDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei  *uint64 `protobuf:"varint,1,req,name=imei" json:"imei,omitempty"`
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *SyncLoopDataReq) Reset() {
	*x = SyncLoopDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncLoopDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncLoopDataReq) ProtoMessage() {}

func (x *SyncLoopDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncLoopDataReq.ProtoReflect.Descriptor instead.
func (*SyncLoopDataReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{41}
}

func (x *SyncLoopDataReq) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *SyncLoopDataReq) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type PhoneCallback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flag  *uint32 `protobuf:"varint,1,req,name=flag" json:"flag,omitempty"` //0：普通通话 1:监听
	Phone *string `protobuf:"bytes,2,req,name=phone" json:"phone,omitempty"`
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *PhoneCallback) Reset() {
	*x = PhoneCallback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneCallback) ProtoMessage() {}

func (x *PhoneCallback) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneCallback.ProtoReflect.Descriptor instead.
func (*PhoneCallback) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{42}
}

func (x *PhoneCallback) GetFlag() uint32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *PhoneCallback) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *PhoneCallback) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//电话报警次数
type PhoneAlarmTimes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallTimes *uint32 `protobuf:"varint,1,opt,name=call_times,json=callTimes" json:"call_times,omitempty"` //电话呼叫次数
	Reserved  *uint32 `protobuf:"varint,2,opt,name=reserved" json:"reserved,omitempty"`
	Cmdid     *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *PhoneAlarmTimes) Reset() {
	*x = PhoneAlarmTimes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneAlarmTimes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneAlarmTimes) ProtoMessage() {}

func (x *PhoneAlarmTimes) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneAlarmTimes.ProtoReflect.Descriptor instead.
func (*PhoneAlarmTimes) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{43}
}

func (x *PhoneAlarmTimes) GetCallTimes() uint32 {
	if x != nil && x.CallTimes != nil {
		return *x.CallTimes
	}
	return 0
}

func (x *PhoneAlarmTimes) GetReserved() uint32 {
	if x != nil && x.Reserved != nil {
		return *x.Reserved
	}
	return 0
}

func (x *PhoneAlarmTimes) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//不同类型报警通知方式
type AlarmNotifyWay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmType      *uint32 `protobuf:"varint,1,opt,name=alarm_type,json=alarmType" json:"alarm_type,omitempty"`                  //报警类型
	AlarmNotifyWay *uint32 `protobuf:"varint,2,opt,name=alarm_notify_way,json=alarmNotifyWay" json:"alarm_notify_way,omitempty"` //报警通知方式
	Cmdid          *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *AlarmNotifyWay) Reset() {
	*x = AlarmNotifyWay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmNotifyWay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmNotifyWay) ProtoMessage() {}

func (x *AlarmNotifyWay) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmNotifyWay.ProtoReflect.Descriptor instead.
func (*AlarmNotifyWay) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{44}
}

func (x *AlarmNotifyWay) GetAlarmType() uint32 {
	if x != nil && x.AlarmType != nil {
		return *x.AlarmType
	}
	return 0
}

func (x *AlarmNotifyWay) GetAlarmNotifyWay() uint32 {
	if x != nil && x.AlarmNotifyWay != nil {
		return *x.AlarmNotifyWay
	}
	return 0
}

func (x *AlarmNotifyWay) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//设防及震动报警参数设置
type FenceShakeAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShakeAlarmSwi      *uint32 `protobuf:"varint,1,opt,name=shake_alarm_swi,json=shakeAlarmSwi" json:"shake_alarm_swi,omitempty"`                //震动报警开关
	FenceDelay         *uint32 `protobuf:"varint,2,opt,name=fence_delay,json=fenceDelay" json:"fence_delay,omitempty"`                           //自动设防延时时间
	ShakeCheckTime     *uint32 `protobuf:"varint,3,opt,name=shake_check_time,json=shakeCheckTime" json:"shake_check_time,omitempty"`             //震动检测时间
	FenceShakeDelay    *uint32 `protobuf:"varint,4,opt,name=fence_shake_delay,json=fenceShakeDelay" json:"fence_shake_delay,omitempty"`          //自动设防震动报警延时
	ShakeAlarmInterval *uint32 `protobuf:"varint,5,opt,name=shake_alarm_interval,json=shakeAlarmInterval" json:"shake_alarm_interval,omitempty"` //震动报警间隔
	Cmdid              *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *FenceShakeAlarm) Reset() {
	*x = FenceShakeAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FenceShakeAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FenceShakeAlarm) ProtoMessage() {}

func (x *FenceShakeAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FenceShakeAlarm.ProtoReflect.Descriptor instead.
func (*FenceShakeAlarm) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{45}
}

func (x *FenceShakeAlarm) GetShakeAlarmSwi() uint32 {
	if x != nil && x.ShakeAlarmSwi != nil {
		return *x.ShakeAlarmSwi
	}
	return 0
}

func (x *FenceShakeAlarm) GetFenceDelay() uint32 {
	if x != nil && x.FenceDelay != nil {
		return *x.FenceDelay
	}
	return 0
}

func (x *FenceShakeAlarm) GetShakeCheckTime() uint32 {
	if x != nil && x.ShakeCheckTime != nil {
		return *x.ShakeCheckTime
	}
	return 0
}

func (x *FenceShakeAlarm) GetFenceShakeDelay() uint32 {
	if x != nil && x.FenceShakeDelay != nil {
		return *x.FenceShakeDelay
	}
	return 0
}

func (x *FenceShakeAlarm) GetShakeAlarmInterval() uint32 {
	if x != nil && x.ShakeAlarmInterval != nil {
		return *x.ShakeAlarmInterval
	}
	return 0
}

func (x *FenceShakeAlarm) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//设防模式设置
type FenceMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode  *uint32 `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"` //0-自动设防，1-手动设防
	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *FenceMode) Reset() {
	*x = FenceMode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FenceMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FenceMode) ProtoMessage() {}

func (x *FenceMode) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FenceMode.ProtoReflect.Descriptor instead.
func (*FenceMode) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{46}
}

func (x *FenceMode) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *FenceMode) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type MessageSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locatype *uint32 `protobuf:"varint,1,req,name=locatype" json:"locatype,omitempty"`
	Locatime *uint32 `protobuf:"varint,2,req,name=locatime" json:"locatime,omitempty"`
	Carid    *string `protobuf:"bytes,3,req,name=carid" json:"carid,omitempty"`
	Message  *string `protobuf:"bytes,4,req,name=message" json:"message,omitempty"`
	Ways     *uint32 `protobuf:"varint,5,req,name=ways" json:"ways,omitempty"`
	Cmdid    *string `protobuf:"bytes,6,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *MessageSend) Reset() {
	*x = MessageSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSend) ProtoMessage() {}

func (x *MessageSend) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSend.ProtoReflect.Descriptor instead.
func (*MessageSend) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{47}
}

func (x *MessageSend) GetLocatype() uint32 {
	if x != nil && x.Locatype != nil {
		return *x.Locatype
	}
	return 0
}

func (x *MessageSend) GetLocatime() uint32 {
	if x != nil && x.Locatime != nil {
		return *x.Locatime
	}
	return 0
}

func (x *MessageSend) GetCarid() string {
	if x != nil && x.Carid != nil {
		return *x.Carid
	}
	return ""
}

func (x *MessageSend) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *MessageSend) GetWays() uint32 {
	if x != nil && x.Ways != nil {
		return *x.Ways
	}
	return 0
}

func (x *MessageSend) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type AlarmRespKKS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   *string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Alarmcode *uint64 `protobuf:"varint,2,opt,name=alarmcode" json:"alarmcode,omitempty"`
	Lang      *uint32 `protobuf:"varint,3,opt,name=lang" json:"lang,omitempty"`
}

func (x *AlarmRespKKS) Reset() {
	*x = AlarmRespKKS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmRespKKS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmRespKKS) ProtoMessage() {}

func (x *AlarmRespKKS) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmRespKKS.ProtoReflect.Descriptor instead.
func (*AlarmRespKKS) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{48}
}

func (x *AlarmRespKKS) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *AlarmRespKKS) GetAlarmcode() uint64 {
	if x != nil && x.Alarmcode != nil {
		return *x.Alarmcode
	}
	return 0
}

func (x *AlarmRespKKS) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

type AddrRespKKS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   *string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Lang      *uint32 `protobuf:"varint,2,opt,name=lang" json:"lang,omitempty"`
	Phone     *string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Alarmcode *uint32 `protobuf:"varint,4,opt,name=alarmcode" json:"alarmcode,omitempty"`
}

func (x *AddrRespKKS) Reset() {
	*x = AddrRespKKS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrRespKKS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrRespKKS) ProtoMessage() {}

func (x *AddrRespKKS) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrRespKKS.ProtoReflect.Descriptor instead.
func (*AddrRespKKS) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{49}
}

func (x *AddrRespKKS) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *AddrRespKKS) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *AddrRespKKS) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *AddrRespKKS) GetAlarmcode() uint32 {
	if x != nil && x.Alarmcode != nil {
		return *x.Alarmcode
	}
	return 0
}

type AddrRespTq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
}

func (x *AddrRespTq) Reset() {
	*x = AddrRespTq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddrRespTq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddrRespTq) ProtoMessage() {}

func (x *AddrRespTq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddrRespTq.ProtoReflect.Descriptor instead.
func (*AddrRespTq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{50}
}

func (x *AddrRespTq) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

type KksSmsContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Lang    *uint32 `protobuf:"varint,2,opt,name=lang" json:"lang,omitempty"`
	Cmdid   *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *KksSmsContent) Reset() {
	*x = KksSmsContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KksSmsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KksSmsContent) ProtoMessage() {}

func (x *KksSmsContent) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KksSmsContent.ProtoReflect.Descriptor instead.
func (*KksSmsContent) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{51}
}

func (x *KksSmsContent) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *KksSmsContent) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *KksSmsContent) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type TqSmsContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *string  `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	Params []string `protobuf:"bytes,2,rep,name=params" json:"params,omitempty"`
	Cmdid  *string  `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *TqSmsContent) Reset() {
	*x = TqSmsContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TqSmsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TqSmsContent) ProtoMessage() {}

func (x *TqSmsContent) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TqSmsContent.ProtoReflect.Descriptor instead.
func (*TqSmsContent) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{52}
}

func (x *TqSmsContent) GetCmd() string {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return ""
}

func (x *TqSmsContent) GetParams() []string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *TqSmsContent) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type SmsPass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone   *string `protobuf:"bytes,1,opt,name=phone" json:"phone,omitempty"`
	Content *string `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Cmdid   *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *SmsPass) Reset() {
	*x = SmsPass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsPass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsPass) ProtoMessage() {}

func (x *SmsPass) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsPass.ProtoReflect.Descriptor instead.
func (*SmsPass) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{53}
}

func (x *SmsPass) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *SmsPass) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *SmsPass) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type EmptyParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmdid *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *EmptyParam) Reset() {
	*x = EmptyParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyParam) ProtoMessage() {}

func (x *EmptyParam) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyParam.ProtoReflect.Descriptor instead.
func (*EmptyParam) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{54}
}

func (x *EmptyParam) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type PieceThrough struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd    *string `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	Cmdlen *uint32 `protobuf:"varint,2,opt,name=cmdlen" json:"cmdlen,omitempty"`
	Data   *string `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	Cmdid  *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *PieceThrough) Reset() {
	*x = PieceThrough{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PieceThrough) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PieceThrough) ProtoMessage() {}

func (x *PieceThrough) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PieceThrough.ProtoReflect.Descriptor instead.
func (*PieceThrough) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{55}
}

func (x *PieceThrough) GetCmd() string {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return ""
}

func (x *PieceThrough) GetCmdlen() uint32 {
	if x != nil && x.Cmdlen != nil {
		return *x.Cmdlen
	}
	return 0
}

func (x *PieceThrough) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

func (x *PieceThrough) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type DelUnLCmd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd   *ECmdType `protobuf:"varint,1,req,name=cmd,enum=slxkgw.ECmdType" json:"cmd,omitempty"`
	Cmdid *string   `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *DelUnLCmd) Reset() {
	*x = DelUnLCmd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelUnLCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelUnLCmd) ProtoMessage() {}

func (x *DelUnLCmd) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelUnLCmd.ProtoReflect.Descriptor instead.
func (*DelUnLCmd) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{56}
}

func (x *DelUnLCmd) GetCmd() ECmdType {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return ECmdType_e_cmd_dev_heart
}

func (x *DelUnLCmd) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

type SmsContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content *string `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Lang    *uint32 `protobuf:"varint,2,opt,name=lang" json:"lang,omitempty"`
	Cmdid   *string `protobuf:"bytes,100,opt,name=cmdid" json:"cmdid,omitempty"`
}

func (x *SmsContent) Reset() {
	*x = SmsContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsContent) ProtoMessage() {}

func (x *SmsContent) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsContent.ProtoReflect.Descriptor instead.
func (*SmsContent) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{57}
}

func (x *SmsContent) GetContent() string {
	if x != nil && x.Content != nil {
		return *x.Content
	}
	return ""
}

func (x *SmsContent) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

func (x *SmsContent) GetCmdid() string {
	if x != nil && x.Cmdid != nil {
		return *x.Cmdid
	}
	return ""
}

//将CmdReq和ECmdType对应起来
type CmdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TodelImei             *ImeiMsg              `protobuf:"bytes,10001,opt,name=todel_imei,json=todelImei" json:"todel_imei,omitempty"`            //待清理的imei
	DelUnlineCmd          *DelUnLCmd            `protobuf:"bytes,10002,opt,name=del_unline_cmd,json=delUnlineCmd" json:"del_unline_cmd,omitempty"` //待清理的离线指令
	Imei                  *uint64               `protobuf:"varint,1001,req,name=imei" json:"imei,omitempty"`
	Protocol              *EProtocol            `protobuf:"varint,1002,req,name=protocol,enum=slxkgw.EProtocol" json:"protocol,omitempty"`                //设备协议
	Cmdtypes              []ECmdType            `protobuf:"varint,1003,rep,name=cmdtypes,enum=slxkgw.ECmdType" json:"cmdtypes,omitempty"`                 //本次要设置的参数列表
	LocationInterval      *CommonConfig         `protobuf:"bytes,11,opt,name=locationInterval" json:"locationInterval,omitempty"`                         //位置上报间隔
	Reset_                *EmptyParam           `protobuf:"bytes,13,opt,name=reset" json:"reset,omitempty"`                                               //一键恢复出厂设置
	Sleep                 *EmptyParam           `protobuf:"bytes,14,opt,name=sleep" json:"sleep,omitempty"`                                               //一键休眠
	SleepTimer            *CommonConfig         `protobuf:"bytes,15,opt,name=sleepTimer" json:"sleepTimer,omitempty"`                                     //休眠时间设置
	PhoneBook             *TerminalSetPhoneBook `protobuf:"bytes,18,opt,name=phoneBook" json:"phoneBook,omitempty"`                                       //设备电话本
	PhoneCallback         *PhoneCallback        `protobuf:"bytes,19,opt,name=phoneCallback" json:"phoneCallback,omitempty"`                               //电话回拨
	LocationReport        *CommonConfig         `protobuf:"bytes,20,opt,name=locationReport" json:"locationReport,omitempty"`                             //定位上报间隔
	MainIpPort            *ChangeIpPort         `protobuf:"bytes,21,opt,name=mainIpPort" json:"mainIpPort,omitempty"`                                     //主ip端口设置
	AlarmSwitch           *CommonSwitch         `protobuf:"bytes,22,opt,name=alarmSwitch" json:"alarmSwitch,omitempty"`                                   //报警开关
	ReplySwitch           *CommonSwitch         `protobuf:"bytes,23,opt,name=replySwitch" json:"replySwitch,omitempty"`                                   //继电器开关
	Sensitivity           *CommonConfig         `protobuf:"bytes,25,opt,name=sensitivity" json:"sensitivity,omitempty"`                                   //灵敏度控制
	SetSleepWakeup        *CommonConfig         `protobuf:"bytes,31,opt,name=setSleepWakeup" json:"setSleepWakeup,omitempty"`                             //休眠唤醒时间
	SetLBSAddGps          *CommonConfig         `protobuf:"bytes,32,opt,name=setLBSAddGps" json:"setLBSAddGps,omitempty"`                                 //附加信息中对lbs,wifi的支持 0:无, 1:LBS, 2:WIFI, 3:WIFI+LBS
	ShakeAlarm            *CommonConfig         `protobuf:"bytes,35,opt,name=shakeAlarm" json:"shakeAlarm,omitempty"`                                     //震动报警设置，0:关闭
	SpeedingCfg           *CommonConfig         `protobuf:"bytes,36,opt,name=speedingCfg" json:"speedingCfg,omitempty"`                                   //超速设置
	MoveStateCfg          *CommonConfig         `protobuf:"bytes,37,opt,name=moveStateCfg" json:"moveStateCfg,omitempty"`                                 //运动状态设置，超过某一个速度判定为运动
	InflexionAngle        *CommonConfig         `protobuf:"bytes,38,opt,name=inflexionAngle" json:"inflexionAngle,omitempty"`                             //拐点补传角度
	VoiceHintSwitch       *CommonSwitch         `protobuf:"bytes,39,opt,name=voiceHintSwitch" json:"voiceHintSwitch,omitempty"`                           //声音提示开关
	State                 *CommonConfig         `protobuf:"bytes,40,opt,name=state" json:"state,omitempty"`                                               //一键请求设备，0:睡眠，1:唤醒, 2:重启
	ViceIpPort            *ChangeIpPort         `protobuf:"bytes,50,opt,name=viceIpPort" json:"viceIpPort,omitempty"`                                     //从属ip端口设置
	AudioSwitch           *CommonSwitch         `protobuf:"bytes,61,opt,name=audioSwitch" json:"audioSwitch,omitempty"`                                   //声控录音开关
	SetRtlsMode           *SetRtlsMode          `protobuf:"bytes,62,opt,name=setRtlsMode" json:"setRtlsMode,omitempty"`                                   //实时定位上传模式
	Language              *CommonConfig         `protobuf:"bytes,63,opt,name=language" json:"language,omitempty"`                                         //设备语言, 0:英文, 1:中文
	LoopInfo              *UpdateLoopSwitchInfo `protobuf:"bytes,65,opt,name=LoopInfo" json:"LoopInfo,omitempty"`                                         //设置定时开关机
	SetLocMode            *SetLocMode           `protobuf:"bytes,66,opt,name=setLocMode" json:"setLocMode,omitempty"`                                     //设置定位模式
	FindDev               *EmptyParam           `protobuf:"bytes,67,opt,name=find_dev,json=findDev" json:"find_dev,omitempty"`                            //查找设备
	GetExtPower           *EmptyParam           `protobuf:"bytes,68,opt,name=get_ext_power,json=getExtPower" json:"get_ext_power,omitempty"`              //查询外电电流 电压
	LedSwitch             *CommonSwitch         `protobuf:"bytes,77,opt,name=ledSwitch" json:"ledSwitch,omitempty"`                                       //led灯开关
	PulloutAlarmSwitch    *CommonSwitch         `protobuf:"bytes,78,opt,name=pulloutAlarmSwitch" json:"pulloutAlarmSwitch,omitempty"`                     //防拆报警开关
	UpdateCenterPhone     *UpdateCenterPhone    `protobuf:"bytes,79,opt,name=updateCenterPhone" json:"updateCenterPhone,omitempty"`                       //中心号码
	UpdateLooplocInfo     *UpdateLooplocInfo    `protobuf:"bytes,80,opt,name=updateLooplocInfo" json:"updateLooplocInfo,omitempty"`                       //周期定位
	UpdateSetLogSign      *CommonSwitch         `protobuf:"bytes,81,opt,name=updateSetLogSign" json:"updateSetLogSign,omitempty"`                         //是否上报日志到服务器
	LowVoltageAlarmSwitch *CommonSwitch         `protobuf:"bytes,82,opt,name=lowVoltageAlarmSwitch" json:"lowVoltageAlarmSwitch,omitempty"`               //低电告警开关
	LightAlarmSwitch      *CommonSwitch         `protobuf:"bytes,83,opt,name=lightAlarmSwitch" json:"lightAlarmSwitch,omitempty"`                         //光感告警开关
	ShutdownAlarmSwitch   *CommonSwitch         `protobuf:"bytes,84,opt,name=shutdownAlarmSwitch" json:"shutdownAlarmSwitch,omitempty"`                   //关机告警开关
	UpdateRemoteUpgrade   *CommonSwitch         `protobuf:"bytes,86,opt,name=updateRemoteUpgrade" json:"updateRemoteUpgrade,omitempty"`                   //下发升级指令
	TrackingRequest       *TrackingRequest      `protobuf:"bytes,87,opt,name=trackingRequest" json:"trackingRequest,omitempty"`                           //追踪
	SetDevText            *SetDevText           `protobuf:"bytes,88,opt,name=setDevText" json:"setDevText,omitempty"`                                     //文本下发
	DeviceType            *DeviceType           `protobuf:"bytes,89,opt,name=deviceType" json:"deviceType,omitempty"`                                     //设备型号
	DisConnSwitch         *CommonSwitch         `protobuf:"bytes,90,opt,name=disConnSwitch" json:"disConnSwitch,omitempty"`                               //休眠是否断网开关
	SleepLocationReport   *CommonConfig         `protobuf:"bytes,91,opt,name=sleepLocationReport" json:"sleepLocationReport,omitempty"`                   //休眠定位上报间隔
	StartRecord           *StartRecord          `protobuf:"bytes,92,opt,name=startRecord" json:"startRecord,omitempty"`                                   //开启录音
	StopRecord            *StopRecord           `protobuf:"bytes,93,opt,name=stopRecord" json:"stopRecord,omitempty"`                                     //停止录音
	QueryLocation         *EmptyParam           `protobuf:"bytes,94,opt,name=query_location,json=queryLocation" json:"query_location,omitempty"`          //点名模式下查询位置信息
	Messagesend           *MessageSend          `protobuf:"bytes,95,opt,name=messagesend" json:"messagesend,omitempty"`                                   //设备发送短信
	AfSleepAction         *CommonConfig         `protobuf:"bytes,96,opt,name=af_sleep_action,json=afSleepAction" json:"af_sleep_action,omitempty"`        //设置设备休眠后的动作,0-发送心跳数据，1-发送定位数据，2-断网, 默认为0
	RepgpsWhenStill       *CommonConfig         `protobuf:"bytes,97,opt,name=repgps_when_still,json=repgpsWhenStill" json:"repgps_when_still,omitempty"`  //设置设备在唤醒状态下静止时是否上报定位数据，0：不上报，1：上报。默认0
	IfCarryLbswifi        *CommonConfig         `protobuf:"bytes,98,opt,name=if_carry_lbswifi,json=ifCarryLbswifi" json:"if_carry_lbswifi,omitempty"`     //设置设备上报的定位数据中，在定到位的状态下，是否带上基站及wifi等附带信息，0：不带，1：带上，默认为0
	SetProtocol           *CommonConfig         `protobuf:"bytes,99,opt,name=set_protocol,json=setProtocol" json:"set_protocol,omitempty"`                //设置当前协议：0：JT808/2011版本；1: JT808/2013版本；2: JT808/2019版本;3:康凯斯协议。默认为1
	SetAccAlarm           *CommonConfig         `protobuf:"bytes,100,opt,name=set_acc_alarm,json=setAccAlarm" json:"set_acc_alarm,omitempty"`             //ACC上电报警开关，0:关闭，1:开启，默认为0（此开关不依赖于设防状态）
	SetLogLevel           *CommonConfig         `protobuf:"bytes,101,opt,name=set_log_level,json=setLogLevel" json:"set_log_level,omitempty"`             //设置LOG上报等级，0:关闭log上报;1:INFO;2:WARNING;3:ERROR;4:FATAL, 默认为1
	SmsPass               *SmsPass              `protobuf:"bytes,102,opt,name=sms_pass,json=smsPass" json:"sms_pass,omitempty"`                           //短信透传，服务器通过设备发送短信到指定的手机号
	DydGracefully         *EmptyParam           `protobuf:"bytes,103,opt,name=dyd_gracefully,json=dydGracefully" json:"dyd_gracefully,omitempty"`         //断油电，结合速度传感器状态
	RecoverDyd            *EmptyParam           `protobuf:"bytes,104,opt,name=recover_dyd,json=recoverDyd" json:"recover_dyd,omitempty"`                  //恢复油电
	DydForcely            *EmptyParam           `protobuf:"bytes,105,opt,name=dyd_forcely,json=dydForcely" json:"dyd_forcely,omitempty"`                  //强制断油电
	PhoneAlarm            *PhoneAlarmTimes      `protobuf:"bytes,106,opt,name=phone_alarm,json=phoneAlarm" json:"phone_alarm,omitempty"`                  //电话报警次数
	AlarmNotifyWay        *AlarmNotifyWay       `protobuf:"bytes,107,opt,name=alarm_notify_way,json=alarmNotifyWay" json:"alarm_notify_way,omitempty"`    //不同类型报警通知方式
	FenceShakeAlarm       *FenceShakeAlarm      `protobuf:"bytes,108,opt,name=fence_shake_alarm,json=fenceShakeAlarm" json:"fence_shake_alarm,omitempty"` //设防及震动报警参数设置
	FenceMode             *CommonSwitch         `protobuf:"bytes,109,opt,name=fence_mode,json=fenceMode" json:"fence_mode,omitempty"`                     //设防模式设置
	PieceThrough          *PieceThrough         `protobuf:"bytes,110,opt,name=piece_through,json=pieceThrough" json:"piece_through,omitempty"`
	//kks begin
	AlarmResp     *AlarmRespKKS  `protobuf:"bytes,201,opt,name=alarm_resp,json=alarmResp" json:"alarm_resp,omitempty"`               //康凯斯设备告警sos回复
	GpsAddrResp   *AddrRespKKS   `protobuf:"bytes,202,opt,name=gps_addr_resp,json=gpsAddrResp" json:"gps_addr_resp,omitempty"`       //康凯斯设备gps地址请求回复
	LbsAddrResp   *AddrRespKKS   `protobuf:"bytes,203,opt,name=lbs_addr_resp,json=lbsAddrResp" json:"lbs_addr_resp,omitempty"`       //康凯斯设备lbs地址请求回复
	KksSmsContent *KksSmsContent `protobuf:"bytes,210,opt,name=kks_sms_content,json=kksSmsContent" json:"kks_sms_content,omitempty"` //康凯斯短信指令
	//tq begin
	TqGpsAddrResp *AddrRespTq   `protobuf:"bytes,301,opt,name=tq_gps_addr_resp,json=tqGpsAddrResp" json:"tq_gps_addr_resp,omitempty"`
	TqSmsContent  *TqSmsContent `protobuf:"bytes,302,opt,name=tq_sms_content,json=tqSmsContent" json:"tq_sms_content,omitempty"` //tq end
	SmsContent    *SmsContent   `protobuf:"bytes,20000,opt,name=sms_content,json=smsContent" json:"sms_content,omitempty"`       //统一短信文本指令
}

func (x *CmdReq) Reset() {
	*x = CmdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdReq) ProtoMessage() {}

func (x *CmdReq) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdReq.ProtoReflect.Descriptor instead.
func (*CmdReq) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{58}
}

func (x *CmdReq) GetTodelImei() *ImeiMsg {
	if x != nil {
		return x.TodelImei
	}
	return nil
}

func (x *CmdReq) GetDelUnlineCmd() *DelUnLCmd {
	if x != nil {
		return x.DelUnlineCmd
	}
	return nil
}

func (x *CmdReq) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *CmdReq) GetProtocol() EProtocol {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return EProtocol_e_protocol_gt808_2011
}

func (x *CmdReq) GetCmdtypes() []ECmdType {
	if x != nil {
		return x.Cmdtypes
	}
	return nil
}

func (x *CmdReq) GetLocationInterval() *CommonConfig {
	if x != nil {
		return x.LocationInterval
	}
	return nil
}

func (x *CmdReq) GetReset_() *EmptyParam {
	if x != nil {
		return x.Reset_
	}
	return nil
}

func (x *CmdReq) GetSleep() *EmptyParam {
	if x != nil {
		return x.Sleep
	}
	return nil
}

func (x *CmdReq) GetSleepTimer() *CommonConfig {
	if x != nil {
		return x.SleepTimer
	}
	return nil
}

func (x *CmdReq) GetPhoneBook() *TerminalSetPhoneBook {
	if x != nil {
		return x.PhoneBook
	}
	return nil
}

func (x *CmdReq) GetPhoneCallback() *PhoneCallback {
	if x != nil {
		return x.PhoneCallback
	}
	return nil
}

func (x *CmdReq) GetLocationReport() *CommonConfig {
	if x != nil {
		return x.LocationReport
	}
	return nil
}

func (x *CmdReq) GetMainIpPort() *ChangeIpPort {
	if x != nil {
		return x.MainIpPort
	}
	return nil
}

func (x *CmdReq) GetAlarmSwitch() *CommonSwitch {
	if x != nil {
		return x.AlarmSwitch
	}
	return nil
}

func (x *CmdReq) GetReplySwitch() *CommonSwitch {
	if x != nil {
		return x.ReplySwitch
	}
	return nil
}

func (x *CmdReq) GetSensitivity() *CommonConfig {
	if x != nil {
		return x.Sensitivity
	}
	return nil
}

func (x *CmdReq) GetSetSleepWakeup() *CommonConfig {
	if x != nil {
		return x.SetSleepWakeup
	}
	return nil
}

func (x *CmdReq) GetSetLBSAddGps() *CommonConfig {
	if x != nil {
		return x.SetLBSAddGps
	}
	return nil
}

func (x *CmdReq) GetShakeAlarm() *CommonConfig {
	if x != nil {
		return x.ShakeAlarm
	}
	return nil
}

func (x *CmdReq) GetSpeedingCfg() *CommonConfig {
	if x != nil {
		return x.SpeedingCfg
	}
	return nil
}

func (x *CmdReq) GetMoveStateCfg() *CommonConfig {
	if x != nil {
		return x.MoveStateCfg
	}
	return nil
}

func (x *CmdReq) GetInflexionAngle() *CommonConfig {
	if x != nil {
		return x.InflexionAngle
	}
	return nil
}

func (x *CmdReq) GetVoiceHintSwitch() *CommonSwitch {
	if x != nil {
		return x.VoiceHintSwitch
	}
	return nil
}

func (x *CmdReq) GetState() *CommonConfig {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *CmdReq) GetViceIpPort() *ChangeIpPort {
	if x != nil {
		return x.ViceIpPort
	}
	return nil
}

func (x *CmdReq) GetAudioSwitch() *CommonSwitch {
	if x != nil {
		return x.AudioSwitch
	}
	return nil
}

func (x *CmdReq) GetSetRtlsMode() *SetRtlsMode {
	if x != nil {
		return x.SetRtlsMode
	}
	return nil
}

func (x *CmdReq) GetLanguage() *CommonConfig {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *CmdReq) GetLoopInfo() *UpdateLoopSwitchInfo {
	if x != nil {
		return x.LoopInfo
	}
	return nil
}

func (x *CmdReq) GetSetLocMode() *SetLocMode {
	if x != nil {
		return x.SetLocMode
	}
	return nil
}

func (x *CmdReq) GetFindDev() *EmptyParam {
	if x != nil {
		return x.FindDev
	}
	return nil
}

func (x *CmdReq) GetGetExtPower() *EmptyParam {
	if x != nil {
		return x.GetExtPower
	}
	return nil
}

func (x *CmdReq) GetLedSwitch() *CommonSwitch {
	if x != nil {
		return x.LedSwitch
	}
	return nil
}

func (x *CmdReq) GetPulloutAlarmSwitch() *CommonSwitch {
	if x != nil {
		return x.PulloutAlarmSwitch
	}
	return nil
}

func (x *CmdReq) GetUpdateCenterPhone() *UpdateCenterPhone {
	if x != nil {
		return x.UpdateCenterPhone
	}
	return nil
}

func (x *CmdReq) GetUpdateLooplocInfo() *UpdateLooplocInfo {
	if x != nil {
		return x.UpdateLooplocInfo
	}
	return nil
}

func (x *CmdReq) GetUpdateSetLogSign() *CommonSwitch {
	if x != nil {
		return x.UpdateSetLogSign
	}
	return nil
}

func (x *CmdReq) GetLowVoltageAlarmSwitch() *CommonSwitch {
	if x != nil {
		return x.LowVoltageAlarmSwitch
	}
	return nil
}

func (x *CmdReq) GetLightAlarmSwitch() *CommonSwitch {
	if x != nil {
		return x.LightAlarmSwitch
	}
	return nil
}

func (x *CmdReq) GetShutdownAlarmSwitch() *CommonSwitch {
	if x != nil {
		return x.ShutdownAlarmSwitch
	}
	return nil
}

func (x *CmdReq) GetUpdateRemoteUpgrade() *CommonSwitch {
	if x != nil {
		return x.UpdateRemoteUpgrade
	}
	return nil
}

func (x *CmdReq) GetTrackingRequest() *TrackingRequest {
	if x != nil {
		return x.TrackingRequest
	}
	return nil
}

func (x *CmdReq) GetSetDevText() *SetDevText {
	if x != nil {
		return x.SetDevText
	}
	return nil
}

func (x *CmdReq) GetDeviceType() *DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return nil
}

func (x *CmdReq) GetDisConnSwitch() *CommonSwitch {
	if x != nil {
		return x.DisConnSwitch
	}
	return nil
}

func (x *CmdReq) GetSleepLocationReport() *CommonConfig {
	if x != nil {
		return x.SleepLocationReport
	}
	return nil
}

func (x *CmdReq) GetStartRecord() *StartRecord {
	if x != nil {
		return x.StartRecord
	}
	return nil
}

func (x *CmdReq) GetStopRecord() *StopRecord {
	if x != nil {
		return x.StopRecord
	}
	return nil
}

func (x *CmdReq) GetQueryLocation() *EmptyParam {
	if x != nil {
		return x.QueryLocation
	}
	return nil
}

func (x *CmdReq) GetMessagesend() *MessageSend {
	if x != nil {
		return x.Messagesend
	}
	return nil
}

func (x *CmdReq) GetAfSleepAction() *CommonConfig {
	if x != nil {
		return x.AfSleepAction
	}
	return nil
}

func (x *CmdReq) GetRepgpsWhenStill() *CommonConfig {
	if x != nil {
		return x.RepgpsWhenStill
	}
	return nil
}

func (x *CmdReq) GetIfCarryLbswifi() *CommonConfig {
	if x != nil {
		return x.IfCarryLbswifi
	}
	return nil
}

func (x *CmdReq) GetSetProtocol() *CommonConfig {
	if x != nil {
		return x.SetProtocol
	}
	return nil
}

func (x *CmdReq) GetSetAccAlarm() *CommonConfig {
	if x != nil {
		return x.SetAccAlarm
	}
	return nil
}

func (x *CmdReq) GetSetLogLevel() *CommonConfig {
	if x != nil {
		return x.SetLogLevel
	}
	return nil
}

func (x *CmdReq) GetSmsPass() *SmsPass {
	if x != nil {
		return x.SmsPass
	}
	return nil
}

func (x *CmdReq) GetDydGracefully() *EmptyParam {
	if x != nil {
		return x.DydGracefully
	}
	return nil
}

func (x *CmdReq) GetRecoverDyd() *EmptyParam {
	if x != nil {
		return x.RecoverDyd
	}
	return nil
}

func (x *CmdReq) GetDydForcely() *EmptyParam {
	if x != nil {
		return x.DydForcely
	}
	return nil
}

func (x *CmdReq) GetPhoneAlarm() *PhoneAlarmTimes {
	if x != nil {
		return x.PhoneAlarm
	}
	return nil
}

func (x *CmdReq) GetAlarmNotifyWay() *AlarmNotifyWay {
	if x != nil {
		return x.AlarmNotifyWay
	}
	return nil
}

func (x *CmdReq) GetFenceShakeAlarm() *FenceShakeAlarm {
	if x != nil {
		return x.FenceShakeAlarm
	}
	return nil
}

func (x *CmdReq) GetFenceMode() *CommonSwitch {
	if x != nil {
		return x.FenceMode
	}
	return nil
}

func (x *CmdReq) GetPieceThrough() *PieceThrough {
	if x != nil {
		return x.PieceThrough
	}
	return nil
}

func (x *CmdReq) GetAlarmResp() *AlarmRespKKS {
	if x != nil {
		return x.AlarmResp
	}
	return nil
}

func (x *CmdReq) GetGpsAddrResp() *AddrRespKKS {
	if x != nil {
		return x.GpsAddrResp
	}
	return nil
}

func (x *CmdReq) GetLbsAddrResp() *AddrRespKKS {
	if x != nil {
		return x.LbsAddrResp
	}
	return nil
}

func (x *CmdReq) GetKksSmsContent() *KksSmsContent {
	if x != nil {
		return x.KksSmsContent
	}
	return nil
}

func (x *CmdReq) GetTqGpsAddrResp() *AddrRespTq {
	if x != nil {
		return x.TqGpsAddrResp
	}
	return nil
}

func (x *CmdReq) GetTqSmsContent() *TqSmsContent {
	if x != nil {
		return x.TqSmsContent
	}
	return nil
}

func (x *CmdReq) GetSmsContent() *SmsContent {
	if x != nil {
		return x.SmsContent
	}
	return nil
}

type GaodeReqMsg_LbsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lac  *string `protobuf:"bytes,1,opt,name=lac" json:"lac,omitempty"`
	Ci   *string `protobuf:"bytes,2,opt,name=ci" json:"ci,omitempty"`
	Rssi *string `protobuf:"bytes,3,opt,name=rssi" json:"rssi,omitempty"`
}

func (x *GaodeReqMsg_LbsInfo) Reset() {
	*x = GaodeReqMsg_LbsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GaodeReqMsg_LbsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaodeReqMsg_LbsInfo) ProtoMessage() {}

func (x *GaodeReqMsg_LbsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GaodeReqMsg_LbsInfo.ProtoReflect.Descriptor instead.
func (*GaodeReqMsg_LbsInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GaodeReqMsg_LbsInfo) GetLac() string {
	if x != nil && x.Lac != nil {
		return *x.Lac
	}
	return ""
}

func (x *GaodeReqMsg_LbsInfo) GetCi() string {
	if x != nil && x.Ci != nil {
		return *x.Ci
	}
	return ""
}

func (x *GaodeReqMsg_LbsInfo) GetRssi() string {
	if x != nil && x.Rssi != nil {
		return *x.Rssi
	}
	return ""
}

type GaodeReqMsg_WifiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid *string `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Rssi *string `protobuf:"bytes,2,opt,name=rssi" json:"rssi,omitempty"`
}

func (x *GaodeReqMsg_WifiInfo) Reset() {
	*x = GaodeReqMsg_WifiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GaodeReqMsg_WifiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaodeReqMsg_WifiInfo) ProtoMessage() {}

func (x *GaodeReqMsg_WifiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GaodeReqMsg_WifiInfo.ProtoReflect.Descriptor instead.
func (*GaodeReqMsg_WifiInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{3, 1}
}

func (x *GaodeReqMsg_WifiInfo) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *GaodeReqMsg_WifiInfo) GetRssi() string {
	if x != nil && x.Rssi != nil {
		return *x.Rssi
	}
	return ""
}

type GaodeReqMsg_KksDevAlarmMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei      *uint64 `protobuf:"varint,1,opt,name=imei" json:"imei,omitempty"`
	Alarmcode *uint32 `protobuf:"varint,2,opt,name=alarmcode" json:"alarmcode,omitempty"`
	Lang      *uint32 `protobuf:"varint,3,opt,name=lang" json:"lang,omitempty"`
}

func (x *GaodeReqMsg_KksDevAlarmMsg) Reset() {
	*x = GaodeReqMsg_KksDevAlarmMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GaodeReqMsg_KksDevAlarmMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GaodeReqMsg_KksDevAlarmMsg) ProtoMessage() {}

func (x *GaodeReqMsg_KksDevAlarmMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GaodeReqMsg_KksDevAlarmMsg.ProtoReflect.Descriptor instead.
func (*GaodeReqMsg_KksDevAlarmMsg) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{3, 2}
}

func (x *GaodeReqMsg_KksDevAlarmMsg) GetImei() uint64 {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return 0
}

func (x *GaodeReqMsg_KksDevAlarmMsg) GetAlarmcode() uint32 {
	if x != nil && x.Alarmcode != nil {
		return *x.Alarmcode
	}
	return 0
}

func (x *GaodeReqMsg_KksDevAlarmMsg) GetLang() uint32 {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return 0
}

type LbsMsg_LbsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lac  *string `protobuf:"bytes,1,opt,name=lac" json:"lac,omitempty"`
	Ci   *string `protobuf:"bytes,2,opt,name=ci" json:"ci,omitempty"`
	Rssi *string `protobuf:"bytes,3,opt,name=rssi" json:"rssi,omitempty"`
}

func (x *LbsMsg_LbsInfo) Reset() {
	*x = LbsMsg_LbsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LbsMsg_LbsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LbsMsg_LbsInfo) ProtoMessage() {}

func (x *LbsMsg_LbsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LbsMsg_LbsInfo.ProtoReflect.Descriptor instead.
func (*LbsMsg_LbsInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{4, 0}
}

func (x *LbsMsg_LbsInfo) GetLac() string {
	if x != nil && x.Lac != nil {
		return *x.Lac
	}
	return ""
}

func (x *LbsMsg_LbsInfo) GetCi() string {
	if x != nil && x.Ci != nil {
		return *x.Ci
	}
	return ""
}

func (x *LbsMsg_LbsInfo) GetRssi() string {
	if x != nil && x.Rssi != nil {
		return *x.Rssi
	}
	return ""
}

type WifiMsg_WifiInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ssid *string `protobuf:"bytes,1,opt,name=ssid" json:"ssid,omitempty"`
	Rssi *string `protobuf:"bytes,2,opt,name=rssi" json:"rssi,omitempty"`
}

func (x *WifiMsg_WifiInfo) Reset() {
	*x = WifiMsg_WifiInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gw_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiMsg_WifiInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiMsg_WifiInfo) ProtoMessage() {}

func (x *WifiMsg_WifiInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gw_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiMsg_WifiInfo.ProtoReflect.Descriptor instead.
func (*WifiMsg_WifiInfo) Descriptor() ([]byte, []int) {
	return file_gw_proto_rawDescGZIP(), []int{5, 0}
}

func (x *WifiMsg_WifiInfo) GetSsid() string {
	if x != nil && x.Ssid != nil {
		return *x.Ssid
	}
	return ""
}

func (x *WifiMsg_WifiInfo) GetRssi() string {
	if x != nil && x.Rssi != nil {
		return *x.Rssi
	}
	return ""
}

var File_gw_proto protoreflect.FileDescriptor

var file_gw_proto_rawDesc = []byte{
	0x0a, 0x08, 0x67, 0x77, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x6c, 0x78, 0x6b,
	0x67, 0x77, 0x22, 0x9a, 0x01, 0x0a, 0x08, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0xe8, 0x07, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x0a, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x12, 0x10, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x64,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x04, 0x12, 0x11, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x5f, 0x69, 0x6d, 0x65,
	0x69, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x12, 0x11, 0x0a, 0x09, 0x72, 0x6d, 0x76, 0x5f,
	0x69, 0x6d, 0x65, 0x69, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x04, 0x12, 0x12, 0x0a, 0x0a, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x22,
	0x73, 0x0a, 0x09, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x07,
	0x65, 0x72, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0b, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x10, 0x0a, 0x08,
	0x74, 0x6f, 0x70, 0x69, 0x6d, 0x65, 0x69, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x12, 0x11,
	0x0a, 0x09, 0x61, 0x64, 0x64, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x04, 0x12, 0x11, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x04, 0x22, 0x39, 0x0a, 0x0b, 0x47, 0x77, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0c, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x10, 0x0a,
	0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x22,
	0xfc, 0x02, 0x0a, 0x0b, 0x47, 0x61, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12,
	0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x12, 0x10, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x12,
	0x0b, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03,
	0x6d, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x12, 0x2c, 0x0a, 0x07, 0x6c, 0x62, 0x73,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x6c, 0x78,
	0x6b, 0x67, 0x77, 0x2e, 0x47, 0x61, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x2e,
	0x4c, 0x62, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x77, 0x69, 0x66, 0x69, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6c, 0x78, 0x6b,
	0x67, 0x77, 0x2e, 0x47, 0x61, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x2e, 0x57,
	0x69, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0e, 0x6b, 0x6b, 0x73, 0x64, 0x65,
	0x76, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x47, 0x61, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x4d, 0x73, 0x67, 0x2e, 0x4b, 0x6b, 0x73, 0x44, 0x65, 0x76, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x4d, 0x73, 0x67, 0x1a, 0x30, 0x0a, 0x07, 0x4c, 0x62, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0b,
	0x0a, 0x03, 0x6c, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0a, 0x0a, 0x02, 0x63,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x73, 0x73, 0x69, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x1a, 0x26, 0x0a, 0x08, 0x57, 0x69, 0x66, 0x69, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0c, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0c, 0x0a, 0x04, 0x72, 0x73, 0x73, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x1a, 0x3f, 0x0a,
	0x0e, 0x4b, 0x6b, 0x73, 0x44, 0x65, 0x76, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4d, 0x73, 0x67, 0x12,
	0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x12, 0x11, 0x0a,
	0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x22, 0xc7,
	0x01, 0x0a, 0x06, 0x4c, 0x62, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65,
	0x69, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x12, 0x0b, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x11, 0x12, 0x10, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0a, 0x0a, 0x02, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x0b, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0b, 0x0a, 0x03, 0x6d, 0x6e, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x12, 0x27, 0x0a,
	0x07, 0x6c, 0x62, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4c, 0x62, 0x73, 0x4d, 0x73, 0x67, 0x2e, 0x4c,
	0x62, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x30, 0x0a, 0x07, 0x4c, 0x62, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0a,
	0x0a, 0x02, 0x63, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x73,
	0x73, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x22, 0x9b, 0x01, 0x0a, 0x07, 0x57, 0x69, 0x66,
	0x69, 0x4d, 0x73, 0x67, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x12, 0x0b, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x12,
	0x10, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x0f, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x12, 0x2a, 0x0a, 0x08, 0x77, 0x69, 0x66, 0x69, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x57, 0x69,
	0x66, 0x69, 0x4d, 0x73, 0x67, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26,
	0x0a, 0x08, 0x57, 0x69, 0x66, 0x69, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x04, 0x73, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x72, 0x73, 0x73, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x22, 0x57, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x12, 0x0a, 0x0a, 0x66, 0x6c, 0x79, 0x6d, 0x6f, 0x64, 0x65,
	0x5f, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x14, 0x0a, 0x0c, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x22,
	0x8c, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x04,
	0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x12, 0x0d, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x12, 0x0c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x22, 0x4f,
	0x0a, 0x03, 0x43, 0x6d, 0x64, 0x12, 0x0b, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x10, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x12, 0x13, 0x0a, 0x0b, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x14, 0x0a, 0x0c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x22,
	0x45, 0x0a, 0x0e, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4d, 0x73,
	0x67, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x12,
	0x11, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x12, 0x12, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x22, 0x47, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65,
	0x76, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x13, 0x0a, 0x0b, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x10, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x22,
	0x59, 0x0a, 0x0e, 0x4b, 0x6b, 0x73, 0x44, 0x65, 0x76, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4d, 0x73,
	0x67, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x12,
	0x11, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a,
	0x03, 0x6c, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x22, 0x67, 0x0a, 0x0d, 0x4b, 0x6b,
	0x73, 0x47, 0x70, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x04, 0x69,
	0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x11, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x22, 0x84, 0x01, 0x0a, 0x0d, 0x4b, 0x6b, 0x73, 0x4c, 0x62, 0x73, 0x41, 0x64,
	0x64, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x12, 0x0b, 0x0a, 0x03, 0x6d, 0x63, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x12, 0x0b, 0x0a, 0x03, 0x6d, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0b, 0x0a,
	0x03, 0x6c, 0x61, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x65,
	0x6c, 0x6c, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x11, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x22, 0x36, 0x0a, 0x0c, 0x54, 0x71,
	0x47, 0x70, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d,
	0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x22, 0x50, 0x0a, 0x0e, 0x4c, 0x62, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x6c, 0x62, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x47,
	0x61, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x4d, 0x73, 0x67, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x12, 0x0b, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x22, 0xb3, 0x05, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d,
	0x73, 0x67, 0x12, 0x28, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x04,
	0x69, 0x6d, 0x65, 0x69, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x12, 0x2a, 0x0a, 0x0d, 0x6d, 0x6f,
	0x64, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x4d, 0x73, 0x67, 0x12, 0x26, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x10, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6d,
	0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4d, 0x73, 0x67,
	0x12, 0x28, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x73, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x44, 0x65, 0x76, 0x4d, 0x73, 0x67, 0x12, 0x31, 0x0a, 0x11, 0x6b, 0x6b,
	0x73, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4b,
	0x6b, 0x73, 0x44, 0x65, 0x76, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x2f, 0x0a,
	0x10, 0x6b, 0x6b, 0x73, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77,
	0x2e, 0x4b, 0x6b, 0x73, 0x47, 0x70, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x12, 0x2f,
	0x0a, 0x10, 0x6b, 0x6b, 0x73, 0x5f, 0x6c, 0x62, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x72,
	0x65, 0x71, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x4b, 0x6b, 0x73, 0x4c, 0x62, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43,
	0x6d, 0x64, 0x12, 0x2d, 0x0a, 0x0f, 0x74, 0x71, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x54, 0x71, 0x47, 0x70, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x30, 0x0a, 0x10, 0x6c, 0x62, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4c, 0x62, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x12, 0x37, 0x0a, 0x17, 0x6b, 0x6b, 0x73, 0x5f, 0x67, 0x74, 0x30, 0x36, 0x65,
	0x5f, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4b, 0x6b,
	0x73, 0x44, 0x65, 0x76, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4d, 0x73, 0x67, 0x12, 0x35, 0x0a, 0x16,
	0x6b, 0x6b, 0x73, 0x5f, 0x67, 0x74, 0x30, 0x36, 0x65, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4b, 0x6b, 0x73, 0x47, 0x70, 0x73, 0x41, 0x64, 0x64, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x16, 0x6b, 0x6b, 0x73, 0x5f, 0x67, 0x74, 0x30, 0x36, 0x65,
	0x5f, 0x6c, 0x62, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4b, 0x6b, 0x73,
	0x4c, 0x62, 0x73, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x71, 0x22, 0x51, 0x0a, 0x10, 0x49, 0x63,
	0x63, 0x69, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c,
	0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x12, 0x0d, 0x0a, 0x05,
	0x69, 0x63, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x64,
	0x65, 0x76, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x22, 0xa9, 0x01,
	0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0c, 0x0a,
	0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x12, 0x10, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x12,
	0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x12, 0x0f, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x72,
	0x66, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0f, 0x0a, 0x07, 0x70, 0x6b, 0x67, 0x5f,
	0x63, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x22, 0xd2, 0x03, 0x0a, 0x08, 0x44, 0x65,
	0x76, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x65, 0x64, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x10, 0x0a, 0x08, 0x64, 0x65,
	0x6c, 0x69, 0x63, 0x61, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x12, 0x0a, 0x0a,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x12, 0x10, 0x0a, 0x08, 0x6c, 0x6f, 0x77, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x12, 0x10, 0x0a, 0x08, 0x6f, 0x75, 0x74, 0x6c, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x12, 0x11, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x16, 0x0a, 0x0e, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x12,
	0x13, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x12, 0x12, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x11, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x13, 0x0a, 0x0b, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x12, 0x13, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0e, 0x0a, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x11, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x11, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x13, 0x0a, 0x0b, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x11, 0x0a, 0x09, 0x6c, 0x62, 0x73, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x11, 0x0a, 0x09, 0x69,
	0x73, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x16,
	0x0a, 0x0e, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x6c, 0x6f, 0x63, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x16, 0x0a, 0x0e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x6c,
	0x6f, 0x63, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x22, 0x24,
	0x0a, 0x14, 0x44, 0x65, 0x76, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x70, 0x6c, 0x6f, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x09, 0x22, 0x2e, 0x0a, 0x09, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x12, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x59, 0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x6f, 0x6f,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x50, 0x48,
	0x4f, 0x4e, 0x45, 0x53, 0x54, 0x41, 0x54, 0x45, 0x12, 0x25, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x37, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x0a, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x77, 0x0a, 0x14, 0x54, 0x65, 0x72, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x12, 0x25, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73,
	0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x53, 0x45, 0x54, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x42, 0x4f,
	0x4f, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x09, 0x22, 0x3d, 0x0a, 0x0c, 0x52, 0x6f, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32,
	0x10, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4c, 0x6f, 0x6f, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x36, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x70, 0x6c, 0x6f,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0f, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x77, 0x65, 0x65, 0x6b,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x22, 0x27, 0x0a, 0x08, 0x57, 0x65, 0x65, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x04, 0x77, 0x65, 0x65, 0x6b, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x09, 0x22, 0x8e, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x70,
	0x6c, 0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x11, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x69,
	0x6e, 0x74, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x1e, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x6c, 0x78, 0x6b,
	0x67, 0x77, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x03, 0x6c,
	0x6f, 0x63, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x70, 0x6c, 0x6f, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x22, 0x31, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x39, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x52, 0x74, 0x6c, 0x73,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x47, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d,
	0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x54, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x70, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x6f, 0x6f, 0x70, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d,
	0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22,
	0x82, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0f, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x12, 0x15, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x16, 0x0a, 0x0e, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x12, 0x12, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x47, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0e,
	0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x0d,
	0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x2d, 0x0a,
	0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x0d, 0x0a,
	0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x2c, 0x0a, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0d, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63,
	0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x27, 0x0a, 0x07, 0x49, 0x6d,
	0x65, 0x69, 0x4d, 0x73, 0x67, 0x12, 0x0d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x04, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x09, 0x22, 0x2f, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x22, 0x49, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x12, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22,
	0x2f, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x2e, 0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x4c, 0x6f, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x04, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x22, 0x3b, 0x0a, 0x0d, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x12, 0x0c, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x12,
	0x0d, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0d,
	0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x46, 0x0a,
	0x0f, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x12, 0x10, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x4d, 0x0a, 0x0e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x57, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x18, 0x0a, 0x10, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x77, 0x61, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x09, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x46, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x68,
	0x61, 0x6b, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x17, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x6b,
	0x65, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x77, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x12, 0x13, 0x0a, 0x0b, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x18, 0x0a, 0x10, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x12, 0x19, 0x0a, 0x11, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x1c, 0x0a, 0x14, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x28, 0x0a, 0x09, 0x46, 0x65, 0x6e, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x22, 0x6e, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x12, 0x10, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x02, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x77, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20,
	0x02, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x22, 0x40, 0x0a, 0x0c, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x4b,
	0x4b, 0x53, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x12, 0x11, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x22, 0x4e, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x4b, 0x4b, 0x53, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x12, 0x11, 0x0a, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x22, 0x1d, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x54, 0x71, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x22, 0x3d, 0x0a, 0x0d, 0x4b, 0x6b, 0x73, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x22, 0x3a, 0x0a, 0x0c, 0x54, 0x71, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x0b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12,
	0x0e, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x12,
	0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x38,
	0x0a, 0x07, 0x53, 0x6d, 0x73, 0x50, 0x61, 0x73, 0x73, 0x12, 0x0d, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64,
	0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x1b, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x48, 0x0a, 0x0c, 0x50, 0x69, 0x65, 0x63, 0x65, 0x54, 0x68,
	0x72, 0x6f, 0x75, 0x67, 0x68, 0x12, 0x0b, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x12, 0x0e, 0x0a, 0x06, 0x63, 0x6d, 0x64, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x12, 0x0c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22,
	0x39, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x55, 0x6e, 0x4c, 0x43, 0x6d, 0x64, 0x12, 0x1d, 0x0a, 0x03,
	0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x6c, 0x78, 0x6b,
	0x67, 0x77, 0x2e, 0x45, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x63,
	0x6d, 0x64, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0x3a, 0x0a, 0x0a, 0x53, 0x6d,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x12, 0x0c, 0x0a, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x12, 0x0d, 0x0a, 0x05, 0x63, 0x6d, 0x64, 0x69, 0x64,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x22, 0xe6, 0x18, 0x0a, 0x06, 0x43, 0x6d, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x24, 0x0a, 0x0a, 0x74, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x65, 0x69, 0x18,
	0x91, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e,
	0x49, 0x6d, 0x65, 0x69, 0x4d, 0x73, 0x67, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x5f, 0x75,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x92, 0x4e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x44, 0x65, 0x6c, 0x55, 0x6e, 0x4c,
	0x43, 0x6d, 0x64, 0x12, 0x0d, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0xe9, 0x07, 0x20, 0x02,
	0x28, 0x04, 0x12, 0x24, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0xea,
	0x07, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x08, 0x63, 0x6d, 0x64, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0xeb, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a,
	0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a,
	0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x21, 0x0a, 0x05, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x0a, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65,
	0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a,
	0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x6c, 0x53, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x2c,
	0x0a, 0x0d, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2c, 0x0a, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x0a, 0x6d, 0x61,
	0x69, 0x6e, 0x49, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x70,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b,
	0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12,
	0x29, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x65,
	0x6e, 0x73, 0x69, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x53, 0x6c, 0x65, 0x65,
	0x70, 0x57, 0x61, 0x6b, 0x65, 0x75, 0x70, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x4c, 0x42, 0x53, 0x41, 0x64, 0x64,
	0x47, 0x70, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b,
	0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x28, 0x0a, 0x0a, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x23, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x66, 0x67, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x0c, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x66, 0x67, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78,
	0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2c, 0x0a, 0x0e, 0x69, 0x6e, 0x66, 0x6c, 0x65, 0x78, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d,
	0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x23, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x28, 0x0a, 0x0a, 0x76, 0x69, 0x63, 0x65, 0x49, 0x70, 0x50, 0x6f, 0x72, 0x74,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x0b,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x52, 0x74,
	0x6c, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x74, 0x6c, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x3f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x0a, 0x08, 0x4c, 0x6f, 0x6f,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x70, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x08, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x18, 0x43, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x29, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f, 0x65,
	0x78, 0x74, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x27, 0x0a, 0x09, 0x6c, 0x65, 0x64, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18,
	0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x12, 0x70,
	0x75, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x34, 0x0a,
	0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f,
	0x70, 0x6c, 0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x6f, 0x70, 0x6c, 0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x10, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x51, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x33, 0x0a, 0x15, 0x6c, 0x6f, 0x77,
	0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2e,
	0x0a, 0x10, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x31,
	0x0a, 0x13, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x12, 0x31, 0x0a, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x12, 0x30, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x57, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78,
	0x6b, 0x67, 0x77, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x54, 0x65, 0x78, 0x74, 0x12, 0x26,
	0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x59, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x43, 0x6f, 0x6e,
	0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x31, 0x0a, 0x13, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x26, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x5d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x0e, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x65, 0x6e, 0x64, 0x18, 0x5f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6c, 0x78, 0x6b,
	0x67, 0x77, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x2d,
	0x0a, 0x0f, 0x61, 0x66, 0x5f, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x60, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a,
	0x11, 0x72, 0x65, 0x70, 0x67, 0x70, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x69,
	0x6c, 0x6c, 0x18, 0x61, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e,
	0x0a, 0x10, 0x69, 0x66, 0x5f, 0x63, 0x61, 0x72, 0x72, 0x79, 0x5f, 0x6c, 0x62, 0x73, 0x77, 0x69,
	0x66, 0x69, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a,
	0x0a, 0x0c, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x63,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x0d, 0x73, 0x65,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x0d, 0x73, 0x65, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x08, 0x73, 0x6d, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e,
	0x53, 0x6d, 0x73, 0x50, 0x61, 0x73, 0x73, 0x12, 0x2a, 0x0a, 0x0e, 0x64, 0x79, 0x64, 0x5f, 0x67,
	0x72, 0x61, 0x63, 0x65, 0x66, 0x75, 0x6c, 0x6c, 0x79, 0x18, 0x67, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x64,
	0x79, 0x64, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67,
	0x77, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x27, 0x0a, 0x0b,
	0x64, 0x79, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x6c, 0x79, 0x18, 0x69, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6c, 0x78,
	0x6b, 0x67, 0x77, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x77, 0x61, 0x79, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x57, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x11, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x68, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x46, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x68, 0x61, 0x6b, 0x65, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x28, 0x0a, 0x0a, 0x66, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x2b, 0x0a, 0x0d, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x74, 0x68, 0x72,
	0x6f, 0x75, 0x67, 0x68, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78,
	0x6b, 0x67, 0x77, 0x2e, 0x50, 0x69, 0x65, 0x63, 0x65, 0x54, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68,
	0x12, 0x29, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xc9,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x4b, 0x4b, 0x53, 0x12, 0x2b, 0x0a, 0x0d, 0x67,
	0x70, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xca, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x4b, 0x4b, 0x53, 0x12, 0x2b, 0x0a, 0x0d, 0x6c, 0x62, 0x73, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x4b, 0x4b, 0x53, 0x12, 0x2f, 0x0a, 0x0f, 0x6b, 0x6b, 0x73, 0x5f, 0x73, 0x6d, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x4b, 0x6b, 0x73, 0x53, 0x6d, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x10, 0x74, 0x71, 0x5f, 0x67, 0x70, 0x73,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x54, 0x71, 0x12, 0x2d, 0x0a, 0x0e, 0x74, 0x71, 0x5f, 0x73, 0x6d, 0x73, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0xae, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x6c, 0x78, 0x6b, 0x67, 0x77, 0x2e, 0x54, 0x71, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0b, 0x73, 0x6d, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0xa0, 0x9c, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6c,
	0x78, 0x6b, 0x67, 0x77, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2a,
	0xa5, 0x01, 0x0a, 0x08, 0x45, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x70, 0x75, 0x72, 0x67, 0x65, 0x5f, 0x66, 0x64, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x63,
	0x6e, 0x74, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x64,
	0x64, 0x5f, 0x69, 0x6d, 0x65, 0x69, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x69, 0x6d, 0x65, 0x69, 0x10, 0x04, 0x12,
	0x15, 0x0a, 0x11, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x6f, 0x70,
	0x69, 0x6d, 0x65, 0x69, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f,
	0x72, 0x6d, 0x76, 0x5f, 0x65, 0x72, 0x72, 0x69, 0x6d, 0x65, 0x69, 0x10, 0x06, 0x12, 0x18, 0x0a,
	0x14, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x67, 0x70, 0x73,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x10, 0x07, 0x2a, 0x56, 0x0a, 0x08, 0x45, 0x45, 0x72, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x5f, 0x6f, 0x6b, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x5f, 0x66, 0x64, 0x5f, 0x6e, 0x6f,
	0x74, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x65, 0x72,
	0x72, 0x5f, 0x66, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x03,
	0x12, 0x0d, 0x0a, 0x09, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x10, 0x64, 0x2a,
	0x63, 0x0a, 0x08, 0x45, 0x4c, 0x6f, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x65,
	0x5f, 0x6c, 0x62, 0x73, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x65, 0x5f, 0x67, 0x70, 0x73, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x65, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x10, 0x02, 0x12, 0x10, 0x0a,
	0x0c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x6c, 0x62, 0x73, 0x10, 0x03, 0x12,
	0x10, 0x0a, 0x0c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x67, 0x70, 0x73, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x77, 0x69,
	0x66, 0x69, 0x10, 0x05, 0x2a, 0xbc, 0x02, 0x0a, 0x0e, 0x45, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x73, 0x79, 0x6e, 0x63, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x65, 0x5f, 0x66, 0x65, 0x6e,
	0x63, 0x65, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x65, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x76, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x65, 0x5f, 0x44, 0x61, 0x74, 0x61,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x65, 0x5f,
	0x6b, 0x6b, 0x73, 0x64, 0x65, 0x76, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x06, 0x12, 0x13, 0x0a,
	0x0f, 0x65, 0x5f, 0x6b, 0x6b, 0x73, 0x67, 0x70, 0x73, 0x61, 0x64, 0x64, 0x72, 0x72, 0x65, 0x71,
	0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x65, 0x5f, 0x6b, 0x6b, 0x73, 0x6c, 0x62, 0x73, 0x61, 0x64,
	0x64, 0x72, 0x72, 0x65, 0x71, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x65,
	0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x76, 0x6f, 0x72, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e,
	0x65, 0x5f, 0x74, 0x71, 0x67, 0x70, 0x73, 0x61, 0x64, 0x64, 0x72, 0x72, 0x65, 0x71, 0x10, 0x0b,
	0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x6c, 0x62, 0x73, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x10, 0x0c, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x6b, 0x6b, 0x73,
	0x67, 0x74, 0x30, 0x36, 0x65, 0x64, 0x65, 0x76, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x0d, 0x12,
	0x18, 0x0a, 0x14, 0x65, 0x5f, 0x6b, 0x6b, 0x73, 0x67, 0x74, 0x30, 0x36, 0x65, 0x67, 0x70, 0x73,
	0x61, 0x64, 0x64, 0x72, 0x72, 0x65, 0x71, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x6b,
	0x6b, 0x73, 0x67, 0x74, 0x30, 0x36, 0x65, 0x6c, 0x62, 0x73, 0x61, 0x64, 0x64, 0x72, 0x72, 0x65,
	0x71, 0x10, 0x0f, 0x2a, 0x9d, 0x01, 0x0a, 0x09, 0x45, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x67, 0x74, 0x38, 0x30, 0x38, 0x5f, 0x32, 0x30, 0x31, 0x31, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x67, 0x74, 0x38, 0x30, 0x38,
	0x5f, 0x32, 0x30, 0x31, 0x33, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x67, 0x74, 0x38, 0x30, 0x38, 0x5f, 0x32, 0x30, 0x31, 0x39,
	0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x6b, 0x6b, 0x73, 0x10, 0x64, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6b, 0x6b, 0x73, 0x5f, 0x67, 0x74, 0x30, 0x36, 0x65, 0x10, 0x65,
	0x12, 0x11, 0x0a, 0x0d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x74,
	0x71, 0x10, 0x6e, 0x2a, 0x32, 0x0a, 0x0b, 0x53, 0x77, 0x69, 0x63, 0x74, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4c,
	0x4f, 0x53, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x2a, 0x69, 0x0a, 0x11, 0x53, 0x45, 0x54, 0x50, 0x48,
	0x4f, 0x4e, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x45, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x44, 0x45, 0x4c, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x48, 0x4f, 0x4e, 0x45,
	0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x59,
	0x10, 0x03, 0x2a, 0x3e, 0x0a, 0x0a, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x12, 0x12, 0x0a, 0x0e, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x55,
	0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x48, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x4c, 0x4c,
	0x10, 0x03, 0x2a, 0x74, 0x0a, 0x08, 0x4c, 0x6f, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x16, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x5f,
	0x4c, 0x4f, 0x4f, 0x50, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x4f,
	0x4e, 0x54, 0x48, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x5f,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x59, 0x10, 0x03, 0x2a, 0x2d, 0x0a, 0x07, 0x4c, 0x6f, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x5f, 0x4c, 0x4f,
	0x43, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x4c, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x4c, 0x4f, 0x43, 0x10, 0x01, 0x2a, 0x31, 0x0a, 0x0a, 0x45, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x65, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x02, 0x2a, 0xbf, 0x13, 0x0a, 0x08, 0x45,
	0x43, 0x6d, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x5f, 0x64, 0x65, 0x76, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f,
	0x6c, 0x62, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x5f, 0x64, 0x65, 0x76, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x6f, 0x70, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x0c, 0x12, 0x13, 0x0a, 0x0f, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x5f, 0x64, 0x65, 0x76, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x79, 0x10, 0x0e, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65,
	0x76, 0x5f, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x10, 0x0f,
	0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6c, 0x6f,
	0x63, 0x5f, 0x70, 0x72, 0x65, 0x10, 0x10, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x5f, 0x64, 0x65, 0x76, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x10, 0x11, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x10, 0x12, 0x12, 0x14, 0x0a,
	0x10, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x10, 0x13, 0x12, 0x24, 0x0a, 0x20, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x10, 0x15, 0x12, 0x1d, 0x0a, 0x19, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x10, 0x16, 0x12, 0x17, 0x0a, 0x13, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x10, 0x17, 0x12, 0x1a, 0x0a, 0x16, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x18, 0x12, 0x11, 0x0a, 0x0d, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x5f, 0x73, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x10, 0x19, 0x12, 0x13, 0x0a, 0x0f, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x1a, 0x12,
	0x12, 0x0a, 0x0e, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x66, 0x6c, 0x79, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x10, 0x1b, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x67, 0x70, 0x73, 0x10, 0x1c, 0x12, 0x16, 0x0a, 0x12, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x62,
	0x73, 0x10, 0x1d, 0x12, 0x17, 0x0a, 0x13, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x77, 0x69, 0x66, 0x69, 0x10, 0x1e, 0x12, 0x1e, 0x0a, 0x1a,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x67, 0x73, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x10, 0x1f, 0x12, 0x1e, 0x0a, 0x1a,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x67, 0x70, 0x73, 0x61, 0x64, 0x64,
	0x5f, 0x6c, 0x62, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x10, 0x20, 0x12, 0x1c, 0x0a, 0x18,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6c, 0x62,
	0x73, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x21, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x61, 0x64, 0x64,
	0x5f, 0x6c, 0x62, 0x73, 0x10, 0x22, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f,
	0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x10, 0x23, 0x12, 0x19, 0x0a,
	0x15, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x24, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x10, 0x25, 0x12, 0x14, 0x0a, 0x10, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x6e, 0x66,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x26, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x10, 0x27, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x6f,
	0x6e, 0x65, 0x6b, 0x65, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x10, 0x28, 0x12, 0x1a, 0x0a,
	0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x10, 0x32, 0x12, 0x11, 0x0a, 0x0d, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x76, 0x6f, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x10, 0x3b, 0x12, 0x16, 0x0a, 0x12,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x10, 0x3c, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x10, 0x3d, 0x12, 0x1e, 0x0a, 0x1a,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x6d, 0x65, 0x6d, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x10, 0x3e, 0x12, 0x1a, 0x0a, 0x16,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x10, 0x3f, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x10, 0x41, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65,
	0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x10, 0x42, 0x12, 0x12, 0x0a, 0x0e,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x66, 0x69, 0x6e, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x10, 0x43,
	0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x78,
	0x74, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x74, 0x10, 0x44, 0x12, 0x14, 0x0a, 0x10, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x6c, 0x65, 0x64, 0x5f, 0x73, 0x77, 0x74, 0x69, 0x63, 0x68, 0x10,
	0x4d, 0x12, 0x17, 0x0a, 0x13, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x70, 0x75, 0x6c, 0x6c, 0x6f,
	0x75, 0x74, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x4e, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x10, 0x4f, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x10, 0x50, 0x12, 0x1a, 0x0a,
	0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x10, 0x51, 0x12, 0x1d, 0x0a, 0x19, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x76,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x10, 0x52, 0x12, 0x1c, 0x0a, 0x18, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x64, 0x72, 0x6f, 0x70, 0x10, 0x53, 0x12, 0x1d, 0x0a, 0x19, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f,
	0x64, 0x65, 0x76, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x10, 0x54, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64,
	0x65, 0x76, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x10,
	0x55, 0x12, 0x20, 0x0a, 0x1c, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x73,
	0x65, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x10, 0x56, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x10, 0x57, 0x12, 0x12, 0x0a,
	0x0e, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x10,
	0x58, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x64,
	0x65, 0x76, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x10, 0x59, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x6e, 0x6e, 0x10, 0x5a, 0x12, 0x23, 0x0a, 0x1f, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65,
	0x76, 0x5f, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x76, 0x61, 0x6c, 0x10, 0x5b, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x10,
	0x5c, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x10, 0x5d, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x5e, 0x12, 0x16, 0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x5f, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f,
	0x63, 0x6d, 0x64, 0x5f, 0x61, 0x66, 0x5f, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x60, 0x12, 0x1b, 0x0a, 0x17, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x72,
	0x65, 0x70, 0x67, 0x70, 0x73, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x69, 0x6c, 0x6c,
	0x10, 0x61, 0x12, 0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x69, 0x66, 0x5f, 0x63,
	0x61, 0x72, 0x72, 0x79, 0x5f, 0x6c, 0x62, 0x73, 0x77, 0x69, 0x66, 0x69, 0x10, 0x62, 0x12, 0x16,
	0x0a, 0x12, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x10, 0x63, 0x12, 0x17, 0x0a, 0x13, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x64, 0x12,
	0x17, 0x0a, 0x13, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x10, 0x66, 0x12, 0x18, 0x0a, 0x14,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x79, 0x64, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x66,
	0x75, 0x6c, 0x6c, 0x79, 0x10, 0x67, 0x12, 0x15, 0x0a, 0x11, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x79, 0x64, 0x10, 0x68, 0x12, 0x15, 0x0a,
	0x11, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x79, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x63, 0x65,
	0x6c, 0x79, 0x10, 0x69, 0x12, 0x19, 0x0a, 0x15, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65,
	0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x10, 0x6a, 0x12,
	0x1a, 0x0a, 0x16, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x10, 0x6b, 0x12, 0x19, 0x0a, 0x15, 0x65,
	0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x5f, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x10, 0x6c, 0x12, 0x18, 0x0a, 0x14, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f,
	0x73, 0x65, 0x74, 0x5f, 0x66, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x10, 0x6d,
	0x12, 0x17, 0x0a, 0x13, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f,
	0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x10, 0x6e, 0x12, 0x19, 0x0a, 0x14, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0xc9, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x67, 0x70,
	0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10,
	0xca, 0x01, 0x12, 0x1c, 0x0a, 0x17, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x6c, 0x62, 0x73, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xcb, 0x01,
	0x12, 0x1a, 0x0a, 0x15, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x6b, 0x6b, 0x73, 0x5f, 0x73, 0x6d,
	0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x10, 0xd2, 0x01, 0x12, 0x1f, 0x0a, 0x1a,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x74, 0x71, 0x5f, 0x67, 0x70, 0x73, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0xad, 0x02, 0x12, 0x19, 0x0a,
	0x14, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x74, 0x71, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x10, 0xae, 0x02, 0x12, 0x16, 0x0a, 0x11, 0x65, 0x5f, 0x63, 0x6d,
	0x64, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x10, 0xc0, 0x08,
	0x12, 0x12, 0x0a, 0x0d, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x69, 0x6d, 0x5f, 0x6d, 0x73,
	0x67, 0x10, 0xc1, 0x08, 0x12, 0x16, 0x0a, 0x11, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x69, 0x6d, 0x65, 0x69, 0x10, 0x91, 0x4e, 0x12, 0x15, 0x0a, 0x10,
	0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x63, 0x6d, 0x64,
	0x10, 0x92, 0x4e, 0x12, 0x17, 0x0a, 0x11, 0x65, 0x5f, 0x63, 0x6d, 0x64, 0x5f, 0x73, 0x6d, 0x73,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x10, 0xa0, 0x9c, 0x01, 0x42, 0x07, 0x5a, 0x05,
	0x2f, 0x67, 0x77, 0x70, 0x62,
}

var (
	file_gw_proto_rawDescOnce sync.Once
	file_gw_proto_rawDescData = file_gw_proto_rawDesc
)

func file_gw_proto_rawDescGZIP() []byte {
	file_gw_proto_rawDescOnce.Do(func() {
		file_gw_proto_rawDescData = protoimpl.X.CompressGZIP(file_gw_proto_rawDescData)
	})
	return file_gw_proto_rawDescData
}

var file_gw_proto_enumTypes = make([]protoimpl.EnumInfo, 12)
var file_gw_proto_msgTypes = make([]protoimpl.MessageInfo, 64)
var file_gw_proto_goTypes = []interface{}{
	(EReqType)(0),                      // 0: slxkgw.EReqType
	(EErrCode)(0),                      // 1: slxkgw.EErrCode
	(ELocType)(0),                      // 2: slxkgw.ELocType
	(ECommonMsgType)(0),                // 3: slxkgw.ECommonMsgType
	(EProtocol)(0),                     // 4: slxkgw.EProtocol
	(SwicthState)(0),                   // 5: slxkgw.SwicthState
	(SETPHONEBOOKSTATE)(0),             // 6: slxkgw.SETPHONEBOOKSTATE
	(PHONESTATE)(0),                    // 7: slxkgw.PHONESTATE
	(LoopType)(0),                      // 8: slxkgw.LoopType
	(LocType)(0),                       // 9: slxkgw.LocType
	(EAudioType)(0),                    // 10: slxkgw.EAudioType
	(ECmdType)(0),                      // 11: slxkgw.ECmdType
	(*InnerReq)(nil),                   // 12: slxkgw.InnerReq
	(*InnerResp)(nil),                  // 13: slxkgw.InnerResp
	(*GwRunStatus)(nil),                // 14: slxkgw.GwRunStatus
	(*GaodeReqMsg)(nil),                // 15: slxkgw.GaodeReqMsg
	(*LbsMsg)(nil),                     // 16: slxkgw.LbsMsg
	(*WifiMsg)(nil),                    // 17: slxkgw.WifiMsg
	(*ModeSyncMsg)(nil),                // 18: slxkgw.ModeSyncMsg
	(*Location)(nil),                   // 19: slxkgw.Location
	(*Cmd)(nil),                        // 20: slxkgw.Cmd
	(*ModeConfirmMsg)(nil),             // 21: slxkgw.ModeConfirmMsg
	(*OpenDevMsg)(nil),                 // 22: slxkgw.OpenDevMsg
	(*KksDevAlarmMsg)(nil),             // 23: slxkgw.KksDevAlarmMsg
	(*KksGpsAddrReq)(nil),              // 24: slxkgw.KksGpsAddrReq
	(*KksLbsAddrReq)(nil),              // 25: slxkgw.KksLbsAddrReq
	(*TqGpsAddrReq)(nil),               // 26: slxkgw.TqGpsAddrReq
	(*LbsInfoCollect)(nil),             // 27: slxkgw.LbsInfoCollect
	(*CommonMsg)(nil),                  // 28: slxkgw.CommonMsg
	(*IccidVersionInfo)(nil),           // 29: slxkgw.IccidVersionInfo
	(*AudioRecord)(nil),                // 30: slxkgw.AudioRecord
	(*DevParam)(nil),                   // 31: slxkgw.DevParam
	(*DevGetLooplocRequest)(nil),       // 32: slxkgw.DevGetLooplocRequest
	(*PhoneInfo)(nil),                  // 33: slxkgw.PhoneInfo
	(*PhoneBookData)(nil),              // 34: slxkgw.PhoneBookData
	(*ChangeIpPort)(nil),               // 35: slxkgw.ChangeIpPort
	(*TerminalSetPhoneBook)(nil),       // 36: slxkgw.TerminalSetPhoneBook
	(*RoteLocation)(nil),               // 37: slxkgw.RoteLocation
	(*UpdateLooplocData)(nil),          // 38: slxkgw.UpdateLooplocData
	(*WeekInfo)(nil),                   // 39: slxkgw.WeekInfo
	(*UpdateLooplocInfo)(nil),          // 40: slxkgw.UpdateLooplocInfo
	(*UpdateCenterPhone)(nil),          // 41: slxkgw.UpdateCenterPhone
	(*SetRtlsMode)(nil),                // 42: slxkgw.SetRtlsMode
	(*SetLocMode)(nil),                 // 43: slxkgw.SetLocMode
	(*UpdateLoopSwitchInfo)(nil),       // 44: slxkgw.UpdateLoopSwitchInfo
	(*TrackingRequest)(nil),            // 45: slxkgw.TrackingRequest
	(*SetDevText)(nil),                 // 46: slxkgw.SetDevText
	(*CommonSwitch)(nil),               // 47: slxkgw.CommonSwitch
	(*CommonConfig)(nil),               // 48: slxkgw.CommonConfig
	(*ImeiMsg)(nil),                    // 49: slxkgw.ImeiMsg
	(*DeviceType)(nil),                 // 50: slxkgw.DeviceType
	(*StartRecord)(nil),                // 51: slxkgw.StartRecord
	(*StopRecord)(nil),                 // 52: slxkgw.StopRecord
	(*SyncLoopDataReq)(nil),            // 53: slxkgw.SyncLoopDataReq
	(*PhoneCallback)(nil),              // 54: slxkgw.PhoneCallback
	(*PhoneAlarmTimes)(nil),            // 55: slxkgw.PhoneAlarmTimes
	(*AlarmNotifyWay)(nil),             // 56: slxkgw.AlarmNotifyWay
	(*FenceShakeAlarm)(nil),            // 57: slxkgw.FenceShakeAlarm
	(*FenceMode)(nil),                  // 58: slxkgw.FenceMode
	(*MessageSend)(nil),                // 59: slxkgw.MessageSend
	(*AlarmRespKKS)(nil),               // 60: slxkgw.AlarmRespKKS
	(*AddrRespKKS)(nil),                // 61: slxkgw.AddrRespKKS
	(*AddrRespTq)(nil),                 // 62: slxkgw.AddrRespTq
	(*KksSmsContent)(nil),              // 63: slxkgw.KksSmsContent
	(*TqSmsContent)(nil),               // 64: slxkgw.TqSmsContent
	(*SmsPass)(nil),                    // 65: slxkgw.SmsPass
	(*EmptyParam)(nil),                 // 66: slxkgw.EmptyParam
	(*PieceThrough)(nil),               // 67: slxkgw.PieceThrough
	(*DelUnLCmd)(nil),                  // 68: slxkgw.DelUnLCmd
	(*SmsContent)(nil),                 // 69: slxkgw.SmsContent
	(*CmdReq)(nil),                     // 70: slxkgw.CmdReq
	(*GaodeReqMsg_LbsInfo)(nil),        // 71: slxkgw.GaodeReqMsg.LbsInfo
	(*GaodeReqMsg_WifiInfo)(nil),       // 72: slxkgw.GaodeReqMsg.WifiInfo
	(*GaodeReqMsg_KksDevAlarmMsg)(nil), // 73: slxkgw.GaodeReqMsg.KksDevAlarmMsg
	(*LbsMsg_LbsInfo)(nil),             // 74: slxkgw.LbsMsg.LbsInfo
	(*WifiMsg_WifiInfo)(nil),           // 75: slxkgw.WifiMsg.WifiInfo
}
var file_gw_proto_depIdxs = []int32{
	0,   // 0: slxkgw.InnerReq.type:type_name -> slxkgw.EReqType
	1,   // 1: slxkgw.InnerResp.errcode:type_name -> slxkgw.EErrCode
	71,  // 2: slxkgw.GaodeReqMsg.lbsinfo:type_name -> slxkgw.GaodeReqMsg.LbsInfo
	72,  // 3: slxkgw.GaodeReqMsg.wifiinfo:type_name -> slxkgw.GaodeReqMsg.WifiInfo
	73,  // 4: slxkgw.GaodeReqMsg.kksdevalarmmsg:type_name -> slxkgw.GaodeReqMsg.KksDevAlarmMsg
	74,  // 5: slxkgw.LbsMsg.lbsinfo:type_name -> slxkgw.LbsMsg.LbsInfo
	75,  // 6: slxkgw.WifiMsg.wifiinfo:type_name -> slxkgw.WifiMsg.WifiInfo
	15,  // 7: slxkgw.LbsInfoCollect.lbs_msg:type_name -> slxkgw.GaodeReqMsg
	3,   // 8: slxkgw.CommonMsg.msg_type:type_name -> slxkgw.ECommonMsgType
	18,  // 9: slxkgw.CommonMsg.mode_sync_msg:type_name -> slxkgw.ModeSyncMsg
	19,  // 10: slxkgw.CommonMsg.location_msg:type_name -> slxkgw.Location
	21,  // 11: slxkgw.CommonMsg.mode_confirm_msg:type_name -> slxkgw.ModeConfirmMsg
	22,  // 12: slxkgw.CommonMsg.open_dev_msg:type_name -> slxkgw.OpenDevMsg
	23,  // 13: slxkgw.CommonMsg.kks_dev_alarm_msg:type_name -> slxkgw.KksDevAlarmMsg
	24,  // 14: slxkgw.CommonMsg.kks_gps_addr_req:type_name -> slxkgw.KksGpsAddrReq
	25,  // 15: slxkgw.CommonMsg.kks_lbs_addr_req:type_name -> slxkgw.KksLbsAddrReq
	20,  // 16: slxkgw.CommonMsg.cmd_response:type_name -> slxkgw.Cmd
	26,  // 17: slxkgw.CommonMsg.tq_gps_addr_req:type_name -> slxkgw.TqGpsAddrReq
	27,  // 18: slxkgw.CommonMsg.lbs_info_collect:type_name -> slxkgw.LbsInfoCollect
	23,  // 19: slxkgw.CommonMsg.kks_gt06e_dev_alarm_msg:type_name -> slxkgw.KksDevAlarmMsg
	24,  // 20: slxkgw.CommonMsg.kks_gt06e_gps_addr_req:type_name -> slxkgw.KksGpsAddrReq
	25,  // 21: slxkgw.CommonMsg.kks_gt06e_lbs_addr_req:type_name -> slxkgw.KksLbsAddrReq
	10,  // 22: slxkgw.AudioRecord.type:type_name -> slxkgw.EAudioType
	7,   // 23: slxkgw.PhoneBookData.state:type_name -> slxkgw.PHONESTATE
	33,  // 24: slxkgw.PhoneBookData.phone_info:type_name -> slxkgw.PhoneInfo
	6,   // 25: slxkgw.TerminalSetPhoneBook.op:type_name -> slxkgw.SETPHONEBOOKSTATE
	34,  // 26: slxkgw.TerminalSetPhoneBook.phone_data:type_name -> slxkgw.PhoneBookData
	8,   // 27: slxkgw.RoteLocation.rote:type_name -> slxkgw.LoopType
	39,  // 28: slxkgw.UpdateLooplocInfo.info:type_name -> slxkgw.WeekInfo
	38,  // 29: slxkgw.UpdateLooplocInfo.loc:type_name -> slxkgw.UpdateLooplocData
	11,  // 30: slxkgw.DelUnLCmd.cmd:type_name -> slxkgw.ECmdType
	49,  // 31: slxkgw.CmdReq.todel_imei:type_name -> slxkgw.ImeiMsg
	68,  // 32: slxkgw.CmdReq.del_unline_cmd:type_name -> slxkgw.DelUnLCmd
	4,   // 33: slxkgw.CmdReq.protocol:type_name -> slxkgw.EProtocol
	11,  // 34: slxkgw.CmdReq.cmdtypes:type_name -> slxkgw.ECmdType
	48,  // 35: slxkgw.CmdReq.locationInterval:type_name -> slxkgw.CommonConfig
	66,  // 36: slxkgw.CmdReq.reset:type_name -> slxkgw.EmptyParam
	66,  // 37: slxkgw.CmdReq.sleep:type_name -> slxkgw.EmptyParam
	48,  // 38: slxkgw.CmdReq.sleepTimer:type_name -> slxkgw.CommonConfig
	36,  // 39: slxkgw.CmdReq.phoneBook:type_name -> slxkgw.TerminalSetPhoneBook
	54,  // 40: slxkgw.CmdReq.phoneCallback:type_name -> slxkgw.PhoneCallback
	48,  // 41: slxkgw.CmdReq.locationReport:type_name -> slxkgw.CommonConfig
	35,  // 42: slxkgw.CmdReq.mainIpPort:type_name -> slxkgw.ChangeIpPort
	47,  // 43: slxkgw.CmdReq.alarmSwitch:type_name -> slxkgw.CommonSwitch
	47,  // 44: slxkgw.CmdReq.replySwitch:type_name -> slxkgw.CommonSwitch
	48,  // 45: slxkgw.CmdReq.sensitivity:type_name -> slxkgw.CommonConfig
	48,  // 46: slxkgw.CmdReq.setSleepWakeup:type_name -> slxkgw.CommonConfig
	48,  // 47: slxkgw.CmdReq.setLBSAddGps:type_name -> slxkgw.CommonConfig
	48,  // 48: slxkgw.CmdReq.shakeAlarm:type_name -> slxkgw.CommonConfig
	48,  // 49: slxkgw.CmdReq.speedingCfg:type_name -> slxkgw.CommonConfig
	48,  // 50: slxkgw.CmdReq.moveStateCfg:type_name -> slxkgw.CommonConfig
	48,  // 51: slxkgw.CmdReq.inflexionAngle:type_name -> slxkgw.CommonConfig
	47,  // 52: slxkgw.CmdReq.voiceHintSwitch:type_name -> slxkgw.CommonSwitch
	48,  // 53: slxkgw.CmdReq.state:type_name -> slxkgw.CommonConfig
	35,  // 54: slxkgw.CmdReq.viceIpPort:type_name -> slxkgw.ChangeIpPort
	47,  // 55: slxkgw.CmdReq.audioSwitch:type_name -> slxkgw.CommonSwitch
	42,  // 56: slxkgw.CmdReq.setRtlsMode:type_name -> slxkgw.SetRtlsMode
	48,  // 57: slxkgw.CmdReq.language:type_name -> slxkgw.CommonConfig
	44,  // 58: slxkgw.CmdReq.LoopInfo:type_name -> slxkgw.UpdateLoopSwitchInfo
	43,  // 59: slxkgw.CmdReq.setLocMode:type_name -> slxkgw.SetLocMode
	66,  // 60: slxkgw.CmdReq.find_dev:type_name -> slxkgw.EmptyParam
	66,  // 61: slxkgw.CmdReq.get_ext_power:type_name -> slxkgw.EmptyParam
	47,  // 62: slxkgw.CmdReq.ledSwitch:type_name -> slxkgw.CommonSwitch
	47,  // 63: slxkgw.CmdReq.pulloutAlarmSwitch:type_name -> slxkgw.CommonSwitch
	41,  // 64: slxkgw.CmdReq.updateCenterPhone:type_name -> slxkgw.UpdateCenterPhone
	40,  // 65: slxkgw.CmdReq.updateLooplocInfo:type_name -> slxkgw.UpdateLooplocInfo
	47,  // 66: slxkgw.CmdReq.updateSetLogSign:type_name -> slxkgw.CommonSwitch
	47,  // 67: slxkgw.CmdReq.lowVoltageAlarmSwitch:type_name -> slxkgw.CommonSwitch
	47,  // 68: slxkgw.CmdReq.lightAlarmSwitch:type_name -> slxkgw.CommonSwitch
	47,  // 69: slxkgw.CmdReq.shutdownAlarmSwitch:type_name -> slxkgw.CommonSwitch
	47,  // 70: slxkgw.CmdReq.updateRemoteUpgrade:type_name -> slxkgw.CommonSwitch
	45,  // 71: slxkgw.CmdReq.trackingRequest:type_name -> slxkgw.TrackingRequest
	46,  // 72: slxkgw.CmdReq.setDevText:type_name -> slxkgw.SetDevText
	50,  // 73: slxkgw.CmdReq.deviceType:type_name -> slxkgw.DeviceType
	47,  // 74: slxkgw.CmdReq.disConnSwitch:type_name -> slxkgw.CommonSwitch
	48,  // 75: slxkgw.CmdReq.sleepLocationReport:type_name -> slxkgw.CommonConfig
	51,  // 76: slxkgw.CmdReq.startRecord:type_name -> slxkgw.StartRecord
	52,  // 77: slxkgw.CmdReq.stopRecord:type_name -> slxkgw.StopRecord
	66,  // 78: slxkgw.CmdReq.query_location:type_name -> slxkgw.EmptyParam
	59,  // 79: slxkgw.CmdReq.messagesend:type_name -> slxkgw.MessageSend
	48,  // 80: slxkgw.CmdReq.af_sleep_action:type_name -> slxkgw.CommonConfig
	48,  // 81: slxkgw.CmdReq.repgps_when_still:type_name -> slxkgw.CommonConfig
	48,  // 82: slxkgw.CmdReq.if_carry_lbswifi:type_name -> slxkgw.CommonConfig
	48,  // 83: slxkgw.CmdReq.set_protocol:type_name -> slxkgw.CommonConfig
	48,  // 84: slxkgw.CmdReq.set_acc_alarm:type_name -> slxkgw.CommonConfig
	48,  // 85: slxkgw.CmdReq.set_log_level:type_name -> slxkgw.CommonConfig
	65,  // 86: slxkgw.CmdReq.sms_pass:type_name -> slxkgw.SmsPass
	66,  // 87: slxkgw.CmdReq.dyd_gracefully:type_name -> slxkgw.EmptyParam
	66,  // 88: slxkgw.CmdReq.recover_dyd:type_name -> slxkgw.EmptyParam
	66,  // 89: slxkgw.CmdReq.dyd_forcely:type_name -> slxkgw.EmptyParam
	55,  // 90: slxkgw.CmdReq.phone_alarm:type_name -> slxkgw.PhoneAlarmTimes
	56,  // 91: slxkgw.CmdReq.alarm_notify_way:type_name -> slxkgw.AlarmNotifyWay
	57,  // 92: slxkgw.CmdReq.fence_shake_alarm:type_name -> slxkgw.FenceShakeAlarm
	47,  // 93: slxkgw.CmdReq.fence_mode:type_name -> slxkgw.CommonSwitch
	67,  // 94: slxkgw.CmdReq.piece_through:type_name -> slxkgw.PieceThrough
	60,  // 95: slxkgw.CmdReq.alarm_resp:type_name -> slxkgw.AlarmRespKKS
	61,  // 96: slxkgw.CmdReq.gps_addr_resp:type_name -> slxkgw.AddrRespKKS
	61,  // 97: slxkgw.CmdReq.lbs_addr_resp:type_name -> slxkgw.AddrRespKKS
	63,  // 98: slxkgw.CmdReq.kks_sms_content:type_name -> slxkgw.KksSmsContent
	62,  // 99: slxkgw.CmdReq.tq_gps_addr_resp:type_name -> slxkgw.AddrRespTq
	64,  // 100: slxkgw.CmdReq.tq_sms_content:type_name -> slxkgw.TqSmsContent
	69,  // 101: slxkgw.CmdReq.sms_content:type_name -> slxkgw.SmsContent
	102, // [102:102] is the sub-list for method output_type
	102, // [102:102] is the sub-list for method input_type
	102, // [102:102] is the sub-list for extension type_name
	102, // [102:102] is the sub-list for extension extendee
	0,   // [0:102] is the sub-list for field type_name
}

func init() { file_gw_proto_init() }
func file_gw_proto_init() {
	if File_gw_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gw_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InnerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GwRunStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GaodeReqMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LbsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModeSyncMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModeConfirmMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenDevMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KksDevAlarmMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KksGpsAddrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KksLbsAddrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TqGpsAddrReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LbsInfoCollect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IccidVersionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DevGetLooplocRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneBookData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeIpPort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminalSetPhoneBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoteLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLooplocData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeekInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLooplocInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCenterPhone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRtlsMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLoopSwitchInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrackingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDevText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonSwitch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImeiMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncLoopDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneCallback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneAlarmTimes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmNotifyWay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FenceShakeAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FenceMode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmRespKKS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrRespKKS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddrRespTq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KksSmsContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TqSmsContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsPass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PieceThrough); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelUnLCmd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GaodeReqMsg_LbsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GaodeReqMsg_WifiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GaodeReqMsg_KksDevAlarmMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LbsMsg_LbsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gw_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiMsg_WifiInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gw_proto_rawDesc,
			NumEnums:      12,
			NumMessages:   64,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gw_proto_goTypes,
		DependencyIndexes: file_gw_proto_depIdxs,
		EnumInfos:         file_gw_proto_enumTypes,
		MessageInfos:      file_gw_proto_msgTypes,
	}.Build()
	File_gw_proto = out.File
	file_gw_proto_rawDesc = nil
	file_gw_proto_goTypes = nil
	file_gw_proto_depIdxs = nil
}
